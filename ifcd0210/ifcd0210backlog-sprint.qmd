---
title: "IFCD0210 Sprint Backlog"
categories: [ifcd0210, backlog]
---

<style>
tr:nth-child(4) {
  background-color: #b2b2b2!important;
  color: #f4f4f4!important;
}
</style>


![Backlog course](/images/home/backlog.jpg){width="30%"}

## ``Sprint#8`` (February)

::: {.column-page-right}
| Sprint | Day | Date | Topics |  Details Topics |
| -- | -- | -- | -- | -- |
| #8 | 35 | 13/02 | + Sprint2: pick up tasks from Product Backlog </br>+ LibraryProject:</br> (1) testBorrowUI </br> (2) bookManager </br> (3) returns </br> (4) storage </br> + Spring Boot: </br> (1) Intro & project structure/folder tree</br>  (2) Spring Rest and Web</br> (3) Thymeleaf </br> (4) Resources: books and webs </br>  | [LibraryProject](https://github.com/AlbertProfe/CifoJava2023/tree/c8b04b02e4d3c9407a92fa3211ee34a6eb56e935/LibraryProject){.external} <br>  [MyFirstSpring](https://github.com/AlbertProfe/CifoJava2023/tree/c8b04b02e4d3c9407a92fa3211ee34a6eb56e935/myFirstSpring){.external} <br> [Spring Boot: create a Maven Project](/springboot/boot-what-create.qmd) </br> ![Sprint1 Product Backlog](/images/javase/Sprint1.jpg){width="30%"} |
|  | 36 | 14/02 | + LibraryProject:</br> <s>(1) borrowManager: list and get statusBorrow</s> </br> (2) returnBook: pseudo-code</br> ++ use-story > use-case > functional-diagram > pseudo-code > code  |[LibraryProject Approach 1](https://github.com/AlbertProfe/CifoJava2023/tree/a2e9c9911f04b8708e1bdf2b9de55300046b70aa/LibraryProject){.external} </br>  [LibraryProject Approach 1 with several methods](https://github.com/AlbertProfe/CifoJava2023/tree/a28d35b6bb99e70cd8f7dd0eace56edc2c4702df/LibraryProject){.external} </br> |
|  | 37 | 15/02 | + LibraryProject:</br>  (1) returnBook: code branch-pattern (to-do)</br> (2) returnBook: codee branch-moreHashmaps (to-do)</br> (3) returnBook: code branch-bidirectional (to-do)</br> **(3) returnBook: code branch-handlerOptions**</br> ++ Make a *brief study* of the main efficient/relevant (three or four?) solutions and approaches to our problem in order to understand it, find out the **optimus solution**, solve it and eventually code it. </br> ++ Create one branch for attempt/aproach (to-do)</br>| [LibraryProject branch-handlerOptions ](https://github.com/AlbertProfe/CifoJava2023/tree/79540cb6e18c8480b8c618d6d22901a36fc2fa58/LibraryProject){.external} </br>   [LibraryProject branch-handlerOptions finished](https://github.com/AlbertProfe/CifoJava2023/tree/6d30ebfc6c082356ae566a2bba875fc304715d4e/LibraryProject){.external} </br></br> ![](/images/javase/how-to-code.jpg){width="30%"} |
|  | 38 | 16/02 | - LibraryProject:</br> (1) Inherence Publication </br> (2) Inherence Person </br>| [LibraryProject](){.external}  </br> [Java 8](/javase/se-concepts-java8.qmd)|
|  | 39 | 17/02 | - SCRUM: </br> (1) Albertus' Dylemma: burnout flag </br> (2) why execution is so difficult? </br>(3) Writting </br> (4) SpaceX: step 2 and further </br>  | SCRUM |
: Backlog Sprint#8 February 2023 {tbl-colwidths="[2,2,2,60,34]"}
:::

::: {.callout-note}
- `-` topic planned or pending
- `+` topic done in class
- `++` new topic not planned
:::


<!--- navLinks -->
<br><br>
<div class=row>
<br>
<div class='column left previous'>
<br>
[{{< fa solid arrow-left >}} IFCD0210 Calendar Backlog](/ifcd0210/ifcd0210calendar.qmd)
<br>
</div>
<br>
<div class='column center'>
<br>
[{{< fa solid arrow-up >}} top](#top)
<br>
</div>
<br>
<div class='column right next'>
<br>
[IFCD0210 Product Backlog  {{< fa solid arrow-right >}}](/ifcd0210/ifcd0210backlog-product.qmd)
<br>
</div>
<br>
</div>
