---
title: "IFCD0210 Sprint Backlog"
categories: [ifcd0210, backlog]
---

<style>
tr:nth-child(5) {
  background-color: #b2b2b2!important;
  color: #f4f4f4!important;
}
</style>


![Backlog course](/images/home/backlog.jpg){width="30%"}

## ``Sprint#4`` (January)


::: {.column-page-right}
| Sprint  | Day | Date | Topics |  Details Topics |
| -- | -- | -- | -- | -- |
| #4 | 15 | 16/01 | + Object Creation: nested Objects in Java</br> + Movie-Reviews-Review-Critic</br>+ @Test and debug</br> - <s>Java Principles</s><br> ++ Within which <b>scope</b> (1) creation object: new, (2) operations and methods and (3) sending-parameters by callings there must be?| [Lab#SE02-1](/javase/selab2-1.qmd)</br>[Markdown in IntellJIdea Mermaid](https://www.jetbrains.com/help/idea/markdown.html#table){.external} & [Mermaid](https://mermaid.js.org/syntax/classDiagram.html){.external} </br>[Principles](/javase/se-what-principles.qmd) / [Objects and class](/javase/se-concepts-objects.qmd)</br>[MovieManager Code](https://github.com/AlbertProfe/CifoJava2023/tree/c7832d6b556668d391bedf3750dd75e696dcc5e3/MovieManger){.external} |
|  | 16 | 17/01 | + MovieManager static or non-static</br> - <s>How to send data within Java</s></br> + Movie-Reviews-Review-Critic</br> + Java Principles </br> - <s>Project structure: .gitignore, readme.md, uml.md</s></br> ++ Decision making at Model: (1) Composition? (2) Inherence? (3) Use? (4) Is Class? sure? (5) static/non-static? (6) Domains? (7) Coupling? (8) Interface/Abstract (9) Multiplicity (10) Packages</br> ++ How to write a comment: What? For what? How?| [Lab#SE02-2](/javase/selab2-2.qmd)</br>[.gitignore](https://git-scm.com/docs/gitignore){.external} / [.gitignore not working](https://stackoverflow.com/questions/25436312/gitignore-not-working){.external}</br>[Objects and class](/javase/se-concepts-objects.qmd) / [static](/javase/se-concepts-static.qmd)</br>[MovieManager Code](https://github.com/AlbertProfe/CifoJava2023/tree/f62b9a176493b6189efd3d55d4b05c1ec5b4fb2e/MovieManger){.external} |
|  | 17 | 18/01 | - Relationships and Multiplicity: onetoone, onetomany, manytomany</br> - <s>Model First: customer/product</s></br> - <s>Project structure: .gitignore, readme.md, uml.md</s> </br> ++ Why Multiplicity? (1) People at same page (2) Identify killing problems: pavoland (3) avoid future problems and correct them before code (4) Huge improvement on understanding THE problem (5) documentation</br>| [Multiplicity](/javase/se-pattern-uml.qmd#entity-relationship-types-multiplicity)</br>[Mermaid Class Diagram UML](https://mermaid.js.org/syntax/classDiagram.html){.external}</br> [Customer/Product example](https://albertprofe.github.io/wiki/javase/se-pattern-uml.html#example-customer-product){.external}</br> [Get your team on the same page](https://theteamcanvas.com/){.external} |
|  | 18 | 19/01 | + 1:n / onetomany / @OneToMany</br> + Example (1) oneToMany: Director/Movie</br> + Project structure: .gitignore, readme.md, uml.md</br> ++ Intro **Albertus' dylemma** | [Java Persistence](https://en.wikibooks.org/wiki/Java_Persistence){.external}</br> [MovieManager Code](https://github.com/AlbertProfe/CifoJava2023/tree/6f962d23a4fae67099ee766f2aa2a17e60a46cd7/MovieManger){.external}</br> [Domain Driven Design â€” method and process agnostic](https://www.linkedin.com/pulse/domain-driven-design-method-process-agnostic-angelo-hulshout-bit){.external}</br> |
|  | 19 | 20/01 | - SCRUM Projects: (1) Management (2) Meetings Rules (3) Mistakes (4) Roles</br> - spaceX: all requirements are dumb</br> -  Model is the answer at Why: Why? (1) Desire (2) Need (3) Natural aspiration</br> - After solving the Why apperars the How: we need Tools > Decision-making & Albertus' dylema | [SCRUM](/scrum/scrum-what-concepts.qmd)  </br>[All requirements are dumb](https://modelthinkers.com/mental-model/musks-5-step-design-process){.external}  |
: Backlog Sprint#4 January 2023 {tbl-colwidths="[2,2,2,64,30]"}
:::


::: {.callout-note}

- `-` topic planned or pending
- `+` topic done in class
- `++` new topic not planned

:::


<!--- navLinks -->
<br><br>
<div class=row>
<br>
<div class='column left previous'>
<br>
[{{< fa solid arrow-left >}} IFCD0210 Calendar](/ifcd0210/ifcd0210calendar.qmd)
<br>
</div>
<br>
<div class='column center'>
<br>
[{{< fa solid arrow-up >}} top](#top)
<br>
</div>
<br>
<div class='column right next'>
<br>
[IFCD0210 Product Backlog  {{< fa solid arrow-right >}}](/ifcd0210/ifcd0210backlog-product.qmd)
<br>
</div>
<br>
</div>
