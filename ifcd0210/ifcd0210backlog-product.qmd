---
title: "IFCD0210 Product Backlog"
categories: [ifcd0210, backlog]
---


![Backlog course](/images/home/backlog.jpg){width="30%"}

::: {.summary}

- [December 2022](/ifcd0210/ifcd0210backlog-product.qmd#december-2022)
- [January 2023](/ifcd0210/ifcd0210backlog-product.qmd#djanuary-2023)
- [February 2023](/ifcd0210/ifcd0210backlog-product.qmd#february-2023)
- [March 2023](/ifcd0210/ifcd0210backlog-product.qmd#march-2023)
- [April 2023](/ifcd0210/ifcd0210backlog-product.qmd#april-2023)
- [May 2023](/ifcd0210/ifcd0210backlog-product.qmd#may-2023)
- [June 2023](/ifcd0210/ifcd0210backlog-product.qmd#june-2023)
- [July 2023](/ifcd0210/ifcd0210backlog-product.qmd#july-2023)

:::

::: {.column-page-right}

## December 2022


| Sprint | Day | Date | Topics |  Details Topics |
| -- | -- | -- | -- | -- |
| #1 | 1 | 12/12/2022 | - Introduction to course IFCD0210</br> - Setting of all tools we are going to need | - |
|  | 2 | 13/12/2022 | - Quarto create and Publish in GitHub</br> - Create VM and IDEs - Accounts - MOOC | - |
|  | 3 | 14/12/2022 | - Linux VM VirtualBox over Windows</br> - What is a Dependency Management, Maven | - |
|  | 4 | 15/12/2022 | - Quarto create and Publish in GitHub with adavnced tools | - |
|  | 5 | 16/12/2022 | - Create Java Maven Project: JUnit</br> - What is Java SE, EE and Spring MVC, Boot</br> - Create classes| - |
| #2 | 6 | 19/12/2022 | Create Java Maven Project: Git - Why scope is so important in Java | - |
|  | 7 | 20/12/2022 | - Introduction to MVC Pattern | - |
|  | 8 | 21/12/2022 | - Create Java Maven Project: Classes</br> - Tag & Little-Cube are our dear friends | - |
|  | 9 | 22/12/2022 | - Introduction to React JS Framework | - |
: Backlog course December 2022 table {tbl-colwidths="[2,2,2,64,30]"}

## January 2023

| Sprint | Day | Date | Topics |  Details Topics |
| -- | -- | -- | -- | -- |
| #3 | 10 | 09/01 | - Different approaches to complex problems are crucial to solve it</br>- How to manage large volumes: quarto</br>- How to stay in class: ask, interrupt, explain new ideas, detect mistakes, connect | [Bash, Pipes](/linux/linux-what-bash.qmd)</br>[Learn](/about/about-learning-intro.qmd#put-your-soul-now) |
|  | 11 | 10/01 | - How to create a Maven Java Project with TDD in Mind</br> - What could go wrong when create a Maven Project | [TDD, JUnit](/javase/se-concepts-tdd.qmd)</br> [Maven Java](/javase/se-concepts-createproject.qmd )</br>[Lab#SE01-1](/javase/selab2-1.qmd)|
|  | 12 | 11/01 | - What is Model in Java</br> - Why model is so important</br> - All begins in Model</br> - How to create a model (1) Class Candidates (2) Validated Class (3) Relationships | [Java Classes and Objects](/javase/se-concepts-objects.qmd)</br>[Pattern UML](/javase/se-pattern-uml.qmd) |
|  | 13 | 12/01 | - Coupling and DD defines from first line even to Deploy</br> - Plan a Project: sprint 0 and SCRUM</br> - Even name a variable is important | [Coupling](/javase/se-concepts-coupling.qmd)</br>[Lab#SE02-4](/javase/selab2-4.qmd) |
|  | 14 | 13/01 | - Time Management</br> -  Object Creation: <b>new</b> and @Test</br> - Nested objects in Java are not easy</br> - Tags & Little-cube are our friends | [Lab#SE02-1](/javase/selab2-1.qmd)</br>[Time Managemnt](/ifcd0210/ifcd0210calendar.qmd#time-management)</br>[Maven Project to GitHub: git init](/javase/se-concepts-projectgit.qmd#maven-project-push-to-github-cli-git) |
| #4 | 15 | 16/01 | + Object Creation: nested Objects in Java</br> + Movie-Reviews-Review-Critic</br>+ @Test and debug</br> - <s>Java Principles</s><br> ++ Within which <b>scope</b> (1) creation object: new, (2) operations and methods and (3) sending-parameters by callings there must be?| [Lab#SE02-1](/javase/selab2-1.qmd)</br>[Markdown in IntellJIdea Mermaid](https://www.jetbrains.com/help/idea/markdown.html#table){.external} & [Mermaid](https://mermaid.js.org/syntax/classDiagram.html){.external} </br>[Principles](/javase/se-what-principles.qmd) / [Objects and class](/javase/se-concepts-objects.qmd)</br>[MovieManager Code](https://github.com/AlbertProfe/CifoJava2023/tree/c7832d6b556668d391bedf3750dd75e696dcc5e3/MovieManger){.external} |
|  | 16 | 17/01 | + MovieManager static or non-static</br> - <s>How to send data within Java</s></br> + Movie-Reviews-Review-Critic</br> + Java Principles </br> - <s>Project structure: .gitignore, readme.md, uml.md</s></br> ++ Decision making at Model: (1) Composition? (2) Inherence? (3) Use? (4) Is Class? sure? (5) static/non-static? (6) Domains? (7) Coupling? (8) Interface/Abstract (9) Multiplicity (10) Packages</br> ++ How to write a comment: What? For what? How?| [Lab#SE02-2](/javase/selab2-2.qmd)</br>[.gitignore](https://git-scm.com/docs/gitignore){.external} / [.gitignore not working](https://stackoverflow.com/questions/25436312/gitignore-not-working){.external}</br>[Objects and class](/javase/se-concepts-objects.qmd) / [static](/javase/se-concepts-static.qmd)</br>[MovieManager Code](https://github.com/AlbertProfe/CifoJava2023/tree/f62b9a176493b6189efd3d55d4b05c1ec5b4fb2e/MovieManger){.external} |
|  | 17 | 18/01 | - Relationships and Multiplicity: onetoone, onetomany, manytomany</br> - <s>Model First: customer/product</s></br> - <s>Project structure: .gitignore, readme.md, uml.md</s> </br> ++ Why Multiplicity? (1) People at same page (2) Identify killing problems: pavoland (3) avoid future problems and correct them before code (4) Huge improvement on understanding THE problem (5) documentation</br>| [Multiplicity](/javase/se-pattern-uml.qmd#entity-relationship-types-multiplicity)</br>[Mermaid Class Diagram UML](https://mermaid.js.org/syntax/classDiagram.html){.external}</br> [Customer/Product example](https://albertprofe.github.io/wiki/javase/se-pattern-uml.html#example-customer-product){.external}</br> [Get your team on the same page](https://theteamcanvas.com/){.external} |
|  | 18 | 19/01 | + 1:n / onetomany / @OneToMany</br> + Example (1) oneToMany: Director/Movie</br> + Project structure: .gitignore, readme.md, uml.md</br> ++ Intro **Albertus' dylemma** | [Java Persistence](https://en.wikibooks.org/wiki/Java_Persistence){.external}</br> [MovieManager Code](https://github.com/AlbertProfe/CifoJava2023/tree/6f962d23a4fae67099ee766f2aa2a17e60a46cd7/MovieManger){.external}</br> [Domain Driven Design — method and process agnostic](https://www.linkedin.com/pulse/domain-driven-design-method-process-agnostic-angelo-hulshout-bit){.external}</br> |
|  | 19 | 20/01 |  + How to approach a complex software architecture (software lifecycle meta-domains): (1) project (2) domains-DDD (3) UML (4) coding  </br> + Decision-making & Albertus' dylema</br>+ SCRUM Projects: (1) Management (2) Meetings Rules (3) Mistakes (4) Roles (5) Iterations</br> + spaceX: all requirements are dumb</br> | [Software lifecycle](/index.qmd#lifecycle-software-(2022))</br> [SCRUM](/scrum/scrum-what-concepts.qmd)</br> [All requirements are dumb](https://modelthinkers.com/mental-model/musks-5-step-design-process){.external}</br> [SpaceX’s first Starship SN5 150m hop test](https://www.youtube.com/watch?v=TYAi2JJItgY){.external}  |
| #5 | 20 | 23/01 | - Library Model Basic/Large</br>   | [Lab#SE00-3 Basic](/javase/selab0-3.qmd#basic-uml) </br>[Lab#SE00-3 Large](/javase/selab0-3.qmd#large-uml)</br> |
|  | 21 | 24/01 | - Example (3) manyToMany: memberLibrary/Book, Customer/Product, Director/Movie</br> | - |
|  | 22 | 25/01 | - Inherence / InteRface / Abstract Class</br> - Quarto</br> | - |
|  | 23 | 26/01 | - Vocabulary</br> - git</br>| - |
|  | 24 | 27/01 | - SCRUM | - |
| #6 | 25 | 30/01 | - Library Model Basic/Large</br> - Example (3) manyToMany: memberLibrary/Book, Customer/Product, Director/Movie</br> - Quarto</br> | [Lab#SE00-3 Basic](/javase/selab0-3.qmd#basic-uml) </br>[Lab#SE00-3 Large](/javase/selab0-3.qmd#large-uml) |
|  | 26 | 31/01 | - | - |
|  | 27 | 01/02 | - | - |
|  | 28 | 02/02 | - | - |
|  | 29 | 03/02 | - | - |
: Backlog course January 2023 table {tbl-colwidths="[2,2,2,64,30]"}



## February 2023

| Sprint | Day | Date | Topics |  Details Topics |
| -- | -- | -- | -- | -- |
| #7 | 30 | 06/02 | - | - |
|  | 31 | 07/02 | - | - |
|  | 32 | 08/02 | - | - |
|  | 33 | 09/02 | - | - |
|  | 34 | 10/02 | - | - |
| #8 | 35 | 13/02 | - | - |
|  | 36 | 14/02 | - | - |
|  | 37 | 15/02 | - | - |
|  | 38 | 16/02 | - | - |
|  | 39 | 17/02 | - | - |
| #9 | 40 | 20/01 | - | - |
|  | 41 | 21/01 | - | - |
|  | 42 | 22/02 | - | - |
|  | 43 | 23/02 | - | - |
|  | 44 | 24/02 | - | - |
| #10 | 45 | 27/02 | - | - |
|  | 46 | 28/02 | - | - |
|  | 47 | 01/03 | - | - |
|  | 48 | 02/03 | - | - |
|  | 49 | 03/03 | - | - |
: Backlog course February 2023 table {tbl-colwidths="[2,2,2,64,30]"}

## March 2023

| Sprint | Day | Date | Topics |  Details Topics |
| -- | -- | -- | -- | -- |
| #11 | 50 | 06/03 | - | - |
|  | 51 | 07/03 | - | - |
|  | 52 | 08/03 | - | - |
|  | 53 | 09/03 | - | - |
|  | 54 | 10/03 | - | - |
| #12 | 55 | 13/03 | - | - |
|  | 56 | 14/03 | - | - |
|  | 57 | 15/03 | - | - |
|  | 58 | 16/03 | - | - |
|  | 59 | 17/03 | - | - |
| #13 | 60 | 20/03 | - | - |
|  | 61 | 21/03 | - | - |
|  | 62 | 22/03 | - | - |
|  | 63 | 23/03 | - | - |
|  | 64 | 24/03 | - | - |
| #14 | 65 | 27/03 | - | - |
|  | 66 | 28/02 | - | - |
|  | 67 | 29/03 | - | - |
|  | 68 | 30/03 | - | - |
|  | 69 | 31/03 | - | - |
: Backlog course March 2023 table {tbl-colwidths="[2,2,2,64,30]"}

## April 2023

| Sprint | Day | Date | Topics |  Details Topics |
| -- | -- | -- | -- | -- |
| #15 | 70 | 03/04 | - | - |
|  | 71 | 04/04 | - | - |
|  | 72 | 05/04 | - | - |
|  | 73 | 06/04 | - | - |
| #16 | 74 | 11/04 | - | - |
|  | 75 | 12/04 | - | - |
|  | 76 | 13/04 | - | - |
|  | 77 | 14/04 | - | - |
| #17 | 78 | 17/04 | - | - |
|  | 79 | 18/04 | - | - |
|  | 80 | 19/04 | - | - |
|  | 81 | 20/04 | - | - |
|  | 82 | 21/04 | - | - |
| #18 | 83 | 24/04 | - | - |
|  | 84 | 25/04 | - | - |-product
|  | 85 | 26/04 | - | - |
|  | 86 | 27/04 | - | - |
|  | 87 | 28/04 | - | - |
: Backlog course April 2023 table {tbl-colwidths="[2,2,2,64,30]"}

## May 2023

| Sprint | Day | Date | Topics |  Details Topics |
| -- | -- | -- | -- | -- |
| #19 | 88 | 02/05 | - | - |
|  | 89 | 03/05 | - | - |
|  | 90 | 04/05 | - | - |
|  | 91 | 05/05 | - | - |
| #20 | 92 | 08/05 | - | - |
|  | 93 | 09/05 | - | - |
|  | 94 | 10/05 | - | - |
|  | 95 | 11/05 | - | - |
|  | 96 | 12/05 | - | - |
| #21 | 97 | 15/05 | - | - |
|  | 98 | 16/05 | - | - |
|  | 99 | 17/05 | - | - |
|  | 100 | 18/05 | - | - |
|  | 101 | 19/05 | - | - |
| #22 | 102 | 22/05 | - | - |
|  | 103 | 23/05 | - | - |
|  | 104 | 24/05 | - | - |
|  | 105 | 25/05 | - | - |
|  | 106 | 26/05 | - | - |
| #23 | 107 | 29/05 | - | - |
|  | 108 | 30/05 | - | - |
|  | 109 | 31/05 | - | - |
|  | 110 | 01/06 | - | - |
|  | 111 | 02/06 | - | - |
: Backlog course May 2023 table {tbl-colwidths="[2,2,2,64,30]"}

## June 2023

| Sprint | Day | Date | Topics |  Details Topics |
| -- | -- | -- | -- | -- |
| #24 | 112 | 06/06 | - | - |
|  | 113 | 07/06 | - | - |
|  | 114 | 08/06 | - | - |
|  | 115 | 09/06 | - | - |
: Backlog course June 2023 table {tbl-colwidths="[2,2,2,64,30]"}

## July 2023

:::

<!--- navLinks -->
<br><br>
<div class=row>
<br>
<div class='column left previous'>
<br>
[{{< fa solid arrow-left >}} IFCD0210 Sprint Backlog](/ifcd0210/ifcd0210backlog-sprint.qmd)
<br>
</div>
<br>
<div class='column center'>
<br>
[{{< fa solid arrow-up >}} top](#top)
<br>
</div>
<br>
<div class='column right next'>
<br>
[IFCD0210 Projects Backlog  {{< fa solid arrow-right >}}](/ifcd0210/ifcd0210backlog-projects.qmd)
<br>
</div>
<br>
</div>
