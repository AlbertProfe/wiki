---
title: ""
filters:
   - lightbox
lightbox: auto
format:
  html:
    toc: false
    html-math-method: katex
    css: styles.css
    highlight-style: atom-one
---

<style>

body {
    background: linear-gradient(0deg, rgba(136,138,136,1) 0%, rgba(220,220,220,1) 52%);
  }

.grid-container {
  display: grid;
  grid-template-columns: 50% 50%; /* Columns take 30% and 70% of the container width */
 
}

.grid-container1 {
  display: grid;
  grid-template-columns: 40% 60%; /* Columns take 30% and 70% of the container width */

}

.grid-container2 {
  display: grid;
  grid-template-columns: 60% 40%; /* Columns take 30% and 70% of the container width */

}

.grid-item {
  
  padding: 1rem;
}



@media screen and (max-width: 960px) {
  .grid-container1 {
    grid-template-columns: 1fr;
    grid-template-areas:
      "header"
      "content"
      "sidebar"
      "footer";
  }
   .grid-container2 {
    grid-template-columns: 1fr;
    grid-template-areas:
      "header"
      "content"
      "sidebar"
      "footer";
  }
    .grid-container {
    grid-template-columns: 1fr;
    grid-template-areas:
      "header"
      "content"
      "sidebar"
      "footer";
  }
}

</style>

<!-- https://www.turing.com/kb/responsive-layouts-using-css-grid -->

::: {.column-page}
![](images/home/frontimagealbertprofeweb3.png)
:::


<div class='grid-container1'>

  <div class='grid-item'>
  <div class='homecard'>

  üìò **Project Management** and Agile methodologies


  - [SCRUM](/scrum/scrum-what-concepts.qmd) framework for project management
  - [beyond SCRUM](/scrum/scrum-week14.qmd) and [before SCRUM](/scrum/scrum-week10.qmd)
  - SCRUM of SCRUM: [Less](/scrum/scrum-week14.qmd#scrum-of-scrum-less)
  - Team Work and [Team Dynamics](/scrum/scrum-week11.qmd)
  - [Mindset](/scrum/scrum-week5.qmd), the key for everything
  - [Emotions](/scrum/scrum-week12.qmd) and Thoughts
  - Managing mind and [time](/scrum/scrum-week7.qmd)

  
  </div>
  </div>

  <div class='grid-item'>
  ![](images/home/2.gif){width="100%"}
  </div>

</div>


<div class='grid-container2'>
  <div class='grid-item'>

  ![](images/home/3.gif){width="100%"}
  </div>

  <div class='grid-item'>
  <div class='homecard'>

  üìò **Architecture** System Design and Design-Patterns

  - DDD: Domain-driven design and [microservices](https://dotnet.microsoft.com/download/e-book/microservices-architecture/pdf){.external}
  - [Spring Boot](https://spring.io/){.external}
  - SPA, multi-page and server side rendering
  - Cloud: [AWS](https://aws.amazon.com/){.external}
  - APIs: REST, Websockets, SOAP, GraphQL
  - [Kafka](https://kafka.apache.org/intro){.external}, event streaming, queues and real-time data capturing
  
  </div>
  </div>
</div>


<div class='grid-item'>
<div class='homecard'>

  üìò <b>Algorithmic</b>
  micro-development and paradigms

  - Scripting: [BASH](/linux/linux-what-bash.qmd), (short for ‚ÄúBourne again shell‚Äù) is a Unix shell
  - Structured and Procedural: C
  - OOP (Object-Oriented Programming): [Java SE](https://java-programming.mooc.fi/){.external}
  - COP (Components-Oriented Programming): [React JS](https://reactjs.org/){.external} and [React TS](https://www.typescriptlang.org/docs/handbook/react.html){.external}

</div>
</div>


<div class='grid-container2'>
  <div class='grid-item'>

  ![](images/home/1.gif){width="100%"}
  </div>

  <div class='grid-item'>
  <div class='homecard'>

 üìò **Control Version Systems**

  - [Git](https://git-scm.com/){.external}
  - and [Git](/devops/devops-vc-git.qmd), a version control system used for source code management
  - [GitHub](https://github.com/){.external}
  - GitLab
  - Subversion
  - [Idea](/devops/devops-vc-ideagithub.qmd) and GitHub 2023
  - [Git and GitHub 2023 CLI](/devops/devops-vc-gitgh.qmd)
  - IDE: [Visual Code](/devops/devops-ide-visualcode.qmd)
  
  </div>
  </div>
</div>





<div class='grid-item'>
<div class='homecard'>

üìò **DevOps**

from Test to Deploy, through Documentation

  - [about this site](about/about-this-site.qmd), for documentation example.
  - [JUnit for Spring Boot](https://junit.org/junit5/){.external}
  - [Jest for JS React](https://jestjs.io/){.external}
  - Deploy on Heroku, Netlify, AWS Amplify
  - [Jenkins](https://www.jenkins.io/), [Docker](https://www.docker.com/){.external} and [k8s](https://kubernetes.io/){.external}


</div>
</div>


<div class='grid-container1'>


<div class='grid-item'>
<div class='homecard'>

üìò **AI**

  - [Artificial Intelligence (AI):](https://www.investopedia.com/terms/a/artificial-intelligence-ai.asp){.external} What It Is and How It Is Used
  - machine learning
  - natural language & prompts
  - [DALL-E](https://www.investopedia.com/openai-rolls-out-upgraded-ai-image-generation-tool-with-dall-e-3-7972607){.external} text-to-image tool
  - [ChatGPT](https://openai.com/blog/chatgpt){.external}
  - Artificial General Intelligence (AGI)
  - AI is categorized into four types: Reactive, Limited memory, Theory-of-mind and Self-aware

</div>
</div>

  <div class='grid-item'>

![](images/home/6.gif){width="100%"}

  </div>

</div>


::: {.column-page}

## Code Spring Boot

With Spring Boot in your app, just a few lines of code is all you need to start building services like a boss.


[Java Spring Framework (Spring Framework)](https://www.ibm.com/topics/java-spring-boot){.external} is a popular, open source, enterprise-level framework for creating **standalone**, **production-grade applications** that run on the Java Virtual Machine (JVM).

``` {.java filename="hello.java" code-block-background=true}
package com.example.myFirstSpring.restcontroller;

import com.example.myFirstSpring.model.Book;
import com.example.myFirstSpring.service.BookService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import java.util.HashMap;

@RestController
@RequestMapping("/api/book")
public class BookRestController {

    @Autowired
    BookService bookService;

    @GetMapping ("/books")
    public HashMap<String, Book> getAllBooks(){

      return bookService.getAllBooks();


    }
}
```

## Code react

[React.js is a JavaScript](/reactjs/reactjs-what-principles.qmd) library used for **building user interfaces**. It is maintained by Facebook and a community of individual developers and companies. React allows developers to create **large web applications that use data which can change over time, without reloading the page**.

```{.js .code-overflow-wrap filename="MyApp.jsx"}

function MyButton() {
  return (
    <button>
      I'm a button
    </button>
  );
}

export default function MyApp() {
  return (
    <div>
      <h1>Welcome to my app</h1>
      <MyButton />
    </div>
  );
}

```
## Code bash

**Bash (short for ‚ÄúBourne again shell‚Äù) is a Unix shell and command language** which was the default shell on Unix systems at the time. [Bash](/linux/linux-what-bash.qmd) is a command-line interface (CLI) that allows users to enter commands and execute programs, as well as perform various other tasks such as managing files, manipulating text, and interacting with other programs.

```{.bash .code-overflow-wrap filename="introduction.sh"}
#!/usr/bin/env bash
# First line of the script is the shebang which tells the system how to execute
# the script: https://en.wikipedia.org/wiki/Shebang_(Unix)
# As you already figured, comments start with #. Shebang is also a comment.

# Simple hello world example:
echo "Hello world!" # => Hello world!

# Each command starts on a new line, or after a semicolon:
echo "This is the first command"; echo "This is the second command"
# => This is the first command
# => This is the second command

# Declaring a variable looks like this:
variable="Some string"

# But not like this:
variable = "Some string" # => returns error "variable: command not found"
# Bash will decide that `variable` is a command it must execute and give an error
# because it can't be found.

# Nor like this:
variable= "Some string" # => returns error: "Some string: command not found"
# Bash will decide that "Some string" is a command it must execute and give an
# error because it can't be found. In this case the "variable=" part is seen
# as a variable assignment valid only for the scope of the "Some string"
# command.
```

:::

<div class='grid-container'>
<div class='grid-item'>

![](images/home/4.gif){width="100%"}
</div>

<div class='grid-item'>

![](images/home/5.gif){width="100%"}
</div>
</div>