---
title: "Lab 2: Spring Boot Projects"
---

Welcome to the cifojava2022-3 wiki!

# Spring Boot Projects

| Name | Type | Description | Link |
| ------------- | ------------- | ------------- | -------------
|  Library0  | Server | Basic Spring Boot Project | [Done](https://github.com/AlbertProfe/cifojava2022-3/wiki#0-basic-spring-boot-project) |
|  Library1  | Server-Rest | API Rest Book `CRUD` with Postman/Swagger| [Done](https://github.com/AlbertProfe/cifojava2022-3/wiki/Library1:-API-Rest-Book-CRUD-with-Postman-Swagger) |
|  Library2  | Server-Rest | API Rest Author-Book `@OneToMany` `@ManyToOne` `CRUD` with Swagger  | [Done](https://github.com/AlbertProfe/cifojava2022-3/wiki/Library2:-API-Rest-Author-Book-@OneToMany-CRUD-with-Swagger) |
|  Library3  | Server | Library-Book `@ManyToMany` `@OneToOne` `CRUD` | [Done](https://github.com/AlbertProfe/cifojava2022-3/wiki/Library3:-API-Rest-Library-Book-@ManyToMany-@OneToOne-CRUD-with-Swagger) |
|  Library4  | Server-Rest | API Rest Library-Book-Author `@ManyToMany` `@OneToMany` `CRUD` with Swagger and Inherence | [Done]() |
|  Library5  | Server-Web | `ThymeLeaf` Web Project | [Done](https://github.com/AlbertProfe/cifojava2022-3/tree/master/library5) |
|  Library6  | Server-Web |  API Rest Book `CRUD` with Postman/Swagger and `Pageable` | [Done](https://github.com/AlbertProfe/cifojava2022-3/tree/90d819e54ebbd95d85243ef74040638798bb1b62/library6) |

***

## (0) Basic Spring Boot project

<details>
<summary>Library0</summary>

* Preliminary works:
  * Create project on [Spring Init](https://start.spring.io/)
  * [Images](https://drive.google.com/drive/folders/1H054CjFFY5EIHlBP7T08s2HilS8RnnHR?usp=sharing), step-by-step to create project
  * [Lombok](https://projectlombok.org/) to make entities simplier
  * [Java-Faker](https://github.com/DiUS/java-faker) to create _entities_
  * Be careful with **devtools**!!
    `You must go to settings and mark it, CTRL+ALT+S
     on Advanced Settings: Allow Auto-make`
  * Very simple project: **no database**, `@BookService` with an `ArrayList<Book> books` where _books_ are stored
  * `@RestController` and `@Controller` to publish JSON data and an HTML web with _Thymeleaf_

* [version 1.0](https://github.com/AlbertProfe/cifojava2022-3/tree/d9af131064c4c47ef9797c09e53cbc6b48023746) : spring boot executions, api REST and web
* [version 2.0](https://github.com/AlbertProfe/cifojava2022-3/tree/33ab432930f3cb8f9aa66a4d6335b90eaea82e31) : just some little modifications to explain what `th:` is

</details>

## (1) API Rest Book `CRUD` with Postman/Swagger

<details>
<summary>Library1</summary>

* Base project:
  * POM
  * API REST **Read** CRUD
  * DataBase H2
  * Application.properties
  * Command Line Runner with methods to test
  * Postman to test API REST, [Postman web](https://www.postman.com/)
  * @Entity, @RestController, @Service, @CrudRepository JPA 2.0, @Component

[Library1](https://github.com/AlbertProfe/cifojava2022-3/wiki/Library1:-API-Rest-Book-CRUD-with-Postman-Swagger) /
[Repo](https://github.com/AlbertProfe/cifojava2022-3/tree/master/library1)
</details>

## (2) API Rest Author-Book `@OneToMany` `CRUD` with Swagger

<details>
<summary>Library2</summary>

* Base project:
  * Library1
  * Two entities related `@OneToMany`, that is, `1:n`

[Library2](https://github.com/AlbertProfe/cifojava2022-3/wiki/Library2:-API-Rest-Author-Book-@OneToMany-CRUD-with-Swagger) /
[Repo](https://github.com/AlbertProfe/cifojava2022-3/tree/master/library2)
</details>

## (3) Library-Book `@ManyToMany` and `@OneToOne` `CRUD`

<details>
<summary>Library3</summary>

* Base project:
  * Library2
  * Two/Three entities related `@ManyToMany`, that is, `n:m` and `@OneToOne` `1:1`

[Library3](https://github.com/AlbertProfe/cifojava2022-3/wiki/Library3:-API-Rest-Library-Book-@ManyToMany-@OneToOne-CRUD-with-Swagger) /
[Repo](https://github.com/AlbertProfe/cifojava2022-3/tree/master/library3)
</details>

## (4) API Rest Library-Book-Author `@ManyToMany` `@OneToMany` `CRUD` with Swagger and Inherence

<details>
<summary>Library4</summary>

* Base project:
  * Library2 and Library3
  * Inherence and Interficies
  * Audit and JavaFaker
  * JPQL  
  * Batch operations and Pagination

</details>

## (5) `ThymeLeaf` Web Project

<details>
<summary>Library5</summary>

* Base project:
  * Library
  * Templates **HTML** Thymeleaf, `Templates Engine`
  * @Controller instead of @RestController

</details>

## (6) `Pagination` ThymeLeaf-Rest Web Project

<details>
<summary>Library6</summary>

* Base project:
  * Library
  * Templates **HTML** Thymeleaf, `Templates Engine`
  * @RestController
  * Pagination and Sorting

</details>
<!--- navLinks -->
<br><br>
<div class=row>
<br>
<div class='column left previous'>
<br>
[{{< fa solid arrow-left >}} Lab 1: Spring Boot Projects](/springboot/sblab1.qmd)
<br>
</div>
<br>
<div class='column center'>
<br>
[{{< fa solid arrow-up >}} top](#top)
<br>
</div>
<br>
<div class='column right next'>
<br>
[Lab 3: Spring Boot Projects  {{< fa solid arrow-right >}}](/springboot/sblab3.qmd)
<br>
</div>
<br>
</div>
