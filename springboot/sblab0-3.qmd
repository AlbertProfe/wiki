---
title: "Lab#SB00-3: LibraryManagement"
subtitle: Spring Boot Library Management Borrow
author: albertprofe
date: "06/01/2021"
date-modified: last-modified
date-format: full
description: Spring Boot
categories: [Spring-Boot, lab]
toc: true
number-sections: true
format:
  html
---

::: {.labs}
ðŸ“˜ **Spring Boot Lab#SB00-3: Borrow Domain**

After [Lab#SB00-1](/springboot/sblab0-1.qmd) and [Lab#SB00-2](/springboot/sblab0-2.qmd) it is time to integrate and refactor the code created at projects:

- **Libray5**: `Book` domain (all CRUD operations)
- **controllerView**: `User` and `Librarian` domain (all CRUD operations)
- **LibraryProject**: from `Java SE` project we have the `business logic` of borrowing a book and the ``Borrow`` clas

:::

</br>

``LibraryManagement`` is the result of **combining three base projects into a single system.**

It is a **legacy system, meaning it has been in use for some time**. The three original projects likely provided different functionality, such as book creation, user management, and borrowing/returning books, which were combined to eventually create the LibraryManagement system.

## Initial integration



- [Library Management](https://github.com/AlbertProfe/CifoJava2023/tree/076dad9b52714b1bb5edb72f27c053494d5e86b0/LibraryManagement){.external} just initial integration with book-selection.

::: {.column-margin}
![Java Classes Library Management](/images/springboot/LibraryManagement-2.png){width="60%"}
:::

::: {.column-margin}
![Templates Library Management](/images/springboot/LibraryManagement-3.png){width="60%"}
:::

![General View Library Management](/images/springboot/LibraryManagement-1.png){width="40%"}




- ``Library5`` is a library module that provides **CRUD (Create, Read, Update, Delete)** operations for the ``Book`` domain. This means that the ``Library5`` module provides functions or classes that allow users of the software to create, read, update, and delete information about books in the system.
- ``controllerView`` is a module that provides **CRUD operations** for both the ``User`` and ``Librarian`` domains. This module provides functions or classes that allow users and librarians to interact with the system, including creating, reading, updating, and deleting information about users and librarians.
- ``LibraryProject`` is the **main Java SE project that contains the business logic for borrowing a book,** as well as a ``Borrow`` class. The Borrow class represents a transaction in which a user borrows a book from the library.

## user-story & use-case

::: {.callout-tip}
## user-story
As a ``user/librarian``, we are able to access user's borrow domain from ``use/users`` web domain and perform such a operations:
:::

- create a new ``borrow``
- ``borrows`` stored in a ``HashMap``
- renovation ``borrow``
- return books from ``borrow``
- close a ``borrow``
- ``findBorrowsByUser``
- ``selectBooks`` by ``userId``

And also:

- fake login and logout

### use-cases

- **Create a new borrow**: initiate a new record in the borrow ``HashMap`` for a user borrowing a book(s).
- **Borrows ``HashMap``**: a database ``HashMap`` that stores information about borrowed books, including user information and return dates.
- **Renovation borrow**: extend the return date for a borrowed book by updating the corresponding borrow record.
- **Return books**: update the borrow record to indicate that the borrowed book(s) have been returned.
- **Close a borrow**: mark a borrow record as closed to indicate that the borrowed book(s) have been returned and the borrow is complete.
- **Fake login as librarian or user**: simulate a login as a librarian or user for testing or debugging purposes.
- **Logout**: terminate a user's authenticated session.
- **Find borrows by user**: retrieve all borrow records associated with a particular user from the borrow ``HashMap``.






## Mock up

Creating a **web Thymeleaf app without CSS** means that the application's user interface will not have any styling. 

The focus of the app is to test Spring Boot's controller and service layers using data stored in ``HashMaps``. 

![Mockup Web Library Management core use-case](/images/springboot/LibraryManagementMockUp.png){width="80%"}

This app will be useful for testing and development purposes, as it allows developers to quickly **build and test the functionality of the controller and service layers without worrying about the presentation layer and the database**

::: {.column-margin}
However, it is not intended for production use, as a production app would require a more polished and professional user interface with styling and layout design
:::



[Mockup Web Library Management core use-case extended](https://viewer.diagrams.net/?target=blank&highlight=0000FF&nav=1&title=LibraryManagementMockUp#Uhttps%3A%2F%2Fdrive.google.com%2Fuc%3Fid%3D1Cqxn88pLy5DDgawKyY_amnqEiELtDcHG%26export%3Ddownload){.external}

## Versions

| Version | Code | Commit | Folder-Tree |
| -- | -- | -- | -- |
| 0.0 | [Library Management](https://github.com/AlbertProfe/CifoJava2023/tree/076dad9b52714b1bb5edb72f27c053494d5e86b0/LibraryManagement){.external}  | create project pom and first integration | [General View Library Management](/images/springboot/LibraryManagement-1.png) |
| 0.1 | [Library Management](https://github.com/AlbertProfe/CifoJava2023/tree/5eeeaa816c4de2ad7b5c9e732d50de630bb4bbfb/LibraryManagement){.external} |  select books and userid without a borrow | - |
| 0.2 | [Library Management](https://github.com/AlbertProfe/CifoJava2023/tree/8f1942b915b5d043e1948ffe65ee55fa0d26cff3){.external} | session and httpServletRequest | - |
| 0.3 | [Library Management](https://github.com/AlbertProfe/CifoJava2023/tree/5538e59e988fc8ec07009644717f8ae820096916/LibraryManagement){.external} | simplify login and logout | - |
| 0.4 | [Library Management](https://github.com/AlbertProfe/CifoJava2023/tree/82f4c404b914ef17ae1aee8446ee7f919791b27e/LibraryManagement){.external} |  borrowByUserId and book domain | [Templates Library Management](/images/springboot/LibraryManagement-4.png) |




<!--- navLinks -->
<br><br>
<div class=row>
<br>
<div class='column left previous'>
<br>
[{{< fa solid arrow-left >}} Spring Boot: Data](/springboot/boot-concepts-data.qmd)
<br>
</div>
<br>
<div class='column center'>
<br>
[{{< fa solid arrow-up >}} top](#top)
<br>
</div>
<br>
<div class='column right next'>
<br>
[Lab 2: Spring Boot Projects  {{< fa solid arrow-right >}}](/springboot/sblab2.qmd)
<br>
</div>
<br>
</div>
