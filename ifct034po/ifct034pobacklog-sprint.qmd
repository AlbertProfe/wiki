---
title: "IFCT034PO Sprint Backlog"
categories: [ifct034po, backlog]
---

<style>
tr:nth-child) {
  background-color: #b2b2b2!important;
  color: #f4f4f4!important;
}
</style>


![Sprint Backlog](/images/home/backlog.jpg){width="30%"}

## ``Sprint#3: Thymeleaf & API Rest`` (October)

::: {.column-page-right}
| Sprint | Day | Date | Topics |  Details Topics |
| -- | -- | -- | -- | -- |
| #3 | 8 | 16/10/2023 | -<s> Thymeleaf </br> - Tags attributes TH: text, link, each</s> </br> - Spring Boot create **fake** @Service </br> - Git and Github  </br> ++ Immutability  </br> ++ Git and Github: VisualCode Git tool  </br> ++ Fake data, **JavaFaker** at @Service | - [Git](https://albertprofe.dev/devops/devops-vc-git.html) </br> - [GitHub](https://albertprofe.dev/devops/devops-vc-github.html)  </br> - [Example bookService with Java Faker](https://github.com/AlbertProfe/cifojava2022-3/blob/master/library/src/main/java/io/company/library/BookService.java)  </br> - [Java Faker](https://github.com/DiUS/java-faker)|
|  | 9 | 17/10/2023 | - Java SE UML and debugger  </br> - Git and Github: VisualCode Git tool: review </br> - **Annotations** review </br>  - **Amazon** example of domains and use of @Controller and @Service (business login)  </br> - Object creation: create **new**, instantiate (memory allocation), varialble reference and object, Dependence Injection (constructor)  | - [create books on demoJavaBoot](https://github.com/AlbertProfe/demoJavaBoot/tree/cc03d8e96e4c9212facda82cba0b7204f00164fc) </br>  - [Connect idea with remote gh](/devops/devops-vc-ideagithub.qmd) </br> - [Git flow](/images/devops/git-flow.gif)  </br> ![Creation Person object](/images/ifct034po/photo_2023-10-17_11-16-09.jpg) |
|  | 10 | 18/10/2023 | - Spring Boot Architecture: **request-response cycle** </br> - Spring Boot Architecture Consumers: </br> 1. server-side render (Thymeleaf), </br> 2. client-side render (React), </br> 3. API Rest  </br>- API Rest Introduction: @RestController  </br> - Postman: install, create account and documentation  </br>  | - [api rest example: **numbeo**](https://www.numbeo.com/common/api.jsp) </br> - [javaFaker books demoJavaBook](https://github.com/AlbertProfe/demoJavaBoot/tree/aa30f22cc3c09168a6e1432eebb68246e9be72d3) </br> - [rest books demoJavaBook](https://github.com/AlbertProfe/demoJavaBoot/tree/a829a8b1dcc3f779942f6541a6147debb9da97ec)   </br> - [Video first hour class **.mkv**](https://drive.google.com/file/d/1UGwPNHMou4a9KbRXgh_FiIJeFk6cmx-K/view?usp=share_link) </br> - [Video first hour class **.mp4**](https://drive.google.com/file/d/1CXT7mUKHL8YKPxjyCdF-CDccMaHJaBQI/view?usp=share_link) </br>  - [idea Spring Boot](/images/ifct034po/idea-spring-boot-2023-10-18_09-54.png) </br>   - [Video second hour class **.mp4**](https://drive.google.com/file/d/1NxXFBkWPmqvuIaQwrt4Pbh-TJQlj-J1t/view?usp=share_link) </br>    ![](/images/ifct034po/photo_2023-10-18_11-05-13.jpg) |
|  | 11 | 19/10/2023 | - **OOP**: UML football example (has/is/uses) </br> - <s>Thymeleaf CRUD: create, read, delete  </br> - Fake data, **JavaFaker** at @Service </s>  </br> - API Rest Spring Boot CRUD:  create, read, delete, update   | - [Mermaid Diagramming and charting tool](https://mermaid.js.org/) </br>  - [Mermaid UML example](https://mermaid.live/edit#pako:eNp9VNFq2zAU_RWhp5Q1_QBjCukKY9BtD2VvfrmWrmNRWcqupI3Qpd8-ybKdVM6agBHnHuncc67sVy6sRF5xocG5RwV7gqEx6c8YG0H20yH9OCCBV9Y49jqWGKtrZTxSBwLv7zP2qbVE9s-DtS-bNj4qlpY3FfttlZwohD6Q-ZAiehQvD-NRKFPZbS4Ip9xc7u0bDi3S3FNdQ-s8gfBLRwYGrNizJ2X2E-Si_ho1oz3Qyh-LSqvI9xJ83PEYnxM6K7FDpPpYgE3hArQIOm7Y7TGVImvVfop2bn6LAyj9XnurVUtAx89A8ntIVot6e5lSxXZEcHxSztcJmDNIKpubRTwusvoXNHGqejXba5MVhMmKEDYYXzh1CCT6PKhfAWkJcKKxC9-T9C743p6ty3j4KuJtm00lP2_p9Lc5-nHz4oixc6BPY14KzHK089B1X2WR28E6lSwXMEhJ6FxJ7q3Bq_E70JDsShtaPd-MpYf3mcdf8SbVf-_uMpjL02Ue4etojm2NL5K5tB5sKfU_xjm_1DO_5QNSvJYyfiHGQBvuexyw4VVcSuwgaN_wxpwiNY7FPh-N4FUH2uEtD4c00umjMqGnfzKleEw) </br> - [football UML class example](/images/ifct034po/UML-football.png)   |
|  | 12 | 20/10/2023 | - <s>Thymeleaf CRUD: update</s>    </br> - API Rest Spring Boot CRUD:  create, read, delete, update  </br> - What/How/Much is an **endpoint** </br>  - *http://localhost:8080/api/v1/book/getAllBooks </br> - http://localhost:8080/api/v1/books/getBookById/f276ca91-2852-44ef-9653* </br> - Code Java Classes UML: football exampple  |  - [Generate Random Data using Java Faker](https://medium.com/@reachansari/generate-random-data-using-java-faker-d2b049f4eb44)  </br> - [mermaid UML footaball example](https://mermaid.live/edit#pako:eNp9VE1vnDAQ_SuWT4k2Gyk9oihS2yi9NFLU9FRxmYVZdoSxkW023ab73-sPcA2lCwfs4c2br2e_80rVyAteCTDmkaDR0JXSv4yxYGTPYKsDew8Wtt0TirpgT_4zmgz9woKRtOPeInSmYB-1htNXMvb-uzM8xJ8bY0Hbq2u_O8cwMUogTFEWlBtBzWHNyzMnJwmdc3q1mmQzmnoBJ9SzZF6CaUrHAxIvy6p-cW5KJm5oZvnoQa5kE6mTT68MWVJyntOmd9BPIMSMYKL4hnvUiInj7UCmR72g0IPAuXv0_qwgGxVUlo4u7Z1SAmEMs7EaaEqehScvwSeWCDqwqAnEInqnjrhS_RcFokXssw40Qu3QLDOovKCudi5SEeJNueRkj64Pss6oOtDtksg4pYl_iHKaZ6qDYDOiI5kwkzmV0g1IJ7o1ZSr9BvqvNlsSwk9kTlBr2k1DcduWqna1xFhmRI0au_99e8sm8RQMf1pXulmBTOK4hIkSWCIid0BkY7qASv2_gMmaewE1tS9BYhfYeK-U_K7kbLt9GFdP8X45gNnC_3Af3Cqc_BkuWGZ0fpnamiFHm0cFvRdsMBjHwm94h7oDqt2lGCZecnvADkteuGWNexiELXkpzw4Kg1WvJ1nxYg_C4A0f-tqdmfEeTdYe5A-lpv35DyPGuD0)  </br>  - [findBookById demoJavaBoot](https://github.com/AlbertProfe/demoJavaBoot/tree/1bee045354bbca4699f5302338f99eb286541f4c)   |
: Backlog course October 2023 table {tbl-colwidths="[2,2,2,60,34]"}
:::

::: {.callout-note}
- `-` > topic planned and done
- `- ` <s>done</s> > topic not done in class (pending)
- `++` new topic not planned
:::



<!--- navLinks -->
<br><br>
<div class=row>
<br>
<div class='column left previous'>
<br>
[{{< fa solid arrow-left >}} IFCT034PO Docs](/ifct034po/ifct034po.qmd)
<br>
</div>
<br>
<div class='column center'>
<br>
[{{< fa solid arrow-up >}} top](#top)
<br>
</div>
<br>
<div class='column right next'>
<br>
[IFCT034PO Product Backlog  {{< fa solid arrow-right >}}](/ifct034po/ifct034pobacklog-product.qmd)
<br>
</div>
<br>
</div>
