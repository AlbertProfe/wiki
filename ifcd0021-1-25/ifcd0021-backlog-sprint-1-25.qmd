---
title: "IFCD0021-1-25 Sprint Backlog"
categories: [ifcd0021, backlog]
toc: true
number-sections: false
format:
  html
filters:
   - lightbox
lightbox: true
---

<style>

.heatMap th { background:  #f4f4f4;}
tr:nth-child(3) {background-color: #f4f4f4;}

th, td {
  padding: 8px;
  text-align: left;
  border-bottom: 1px solid #ddd;
}

tr:hover {background-color:  #f4f4f4;}

</style>

![Sprint Backlog](/images/home/backlog.jpg){width="30%"}

<div class="heatMap">

::: {.column-page-right}

##  ``Sprint#06 rentingCar-Boot: availability`` (October 2025)

| # | Day | Date | Topics |  Details Topics |
| -- | -- | -- | -- | -- |
| **06**  | 20 | 20/10//2025 |  - Plan Sprint#06 </br> - Why is so important having **Context**? Right/Left hemispheres, planning and decision-making </br> - How to plan sandbox-projects: UNL, hours/week, very clear product-goal, roadmap projects 1-year</br></br> - Project: rentingCar-Boot: <br> (1) UML, Car & Client object  <br> (2) UI: no UI, just JUnit tests <br>  (3) Repository: JPA & H2 DB </br> (4) **Feature**, car **availability by date**: data model and listing </br> (5) Updating data-model: where and how  </br>  </br>  - JUnit: **asserts** |   - [Repo rentingCar-Boot: commit](https://github.com/AlbertProfe/rentingCarTest/tree/){.external target='_blank'} </br> - [Spring Boot create](/springboot/boot-what-create-th-h2.qmd){.external target='_blank'} </br> </br>  |
|  | 21 | 21/10/2025 |   - Project: rentingCar-Boot: <br> (1) UML, Car & Client object  <br> (2) UI: no UI, just JUnit tests <br>  (3) Repository: JPA & H2 DB </br> (4) **Feature**: car availability by date: booking and updating availability  </br> </br> (5) **Booking updates availability**  |   - [Repo rentingCar-Boot: commit](https://github.com/AlbertProfe/rentingCarTest/tree/){.external target='_blank'} </br> - [JPA: relationships](/springboot/boot-concepts-jpa-3.qmd){.external target='_blank'} </br> </br>  </br> </br> |
|   |
|   | 22 | 23/10/2025 | - Project: rentingCar-Boot: <br> (1) UML, Car & Client object  <br> (2) UI: no UI, just JUnit tests <br>  (3) Repository: JPA & H2 DB </br> (4) Listing Boooking/Car   </br> </br> - PRA#01, PRA#02, , PRA#03: MF01, MF02, MF03 </br> </br> - Git: clone, fork and pull request    | - [Repo rentingCar-Boot: commit](https://github.com/AlbertProfe/rentingCarTest/tree/){.external target='_blank'}  </br>  - [DDD and coupling](/javase/se-concepts-coupling.qmd){.external target='_blank'} </br></br>|
|   | 23 | 24/15/2025 | - Project: rentingCar-Boot: <br> (1) UML, Car & Client object  <br> (2) UI: no UI, just JUnit tests <br>  (3) Repository: JPA & H2 DB </br> (4) Listing Boooking/Car   </br> </br> - Why API Rest is a standard de facto? |   - [Repo rentingCar-Boot: commit](https://github.com/AlbertProfe/rentingCarTest/tree/){.external target='_blank'} |
: Backlog course Sprint#06 October 2025 table {tbl-colwidths="[2,2,2,60,34]"}
:::

</div>

::: {.callout-note}
- `-` topic planned or done
- `----` topic pending to future
- `++` new topic not planned
:::

