---
title: "IFCD0021-1-25 Sprint Backlog"
categories: [ifcd0021, backlog]
toc: true
number-sections: false
format:
  html
filters:
   - lightbox
lightbox: true
---

<style>

.heatMap th { background:  #f4f4f4;}
tr:nth-child(3) {background-color: #f4f4f4;}

th, td {
  padding: 8px;
  text-align: left;
  border-bottom: 1px solid #ddd;
}

tr:hover {background-color:  #f4f4f4;}

</style>

![Sprint Backlog](/images/home/backlog.jpg){width="30%"}

<div class="heatMap">

::: {.column-page-right}

##  ``Sprint#04 rentingCar-Boot (1)`` (October 2025)

| # | Day | Date | Topics |  Details Topics |
| -- | -- | -- | -- | -- |
|   | **10** | 06/10//2025 |  - Plan Sprint#04 </br></br> - Project: rentingCar-Boot: <br> (1) UML, Car & Client object  <br> (2) UI: no UI, just JUnit tests <br> (3) Class @Service: CarService & ClientService  <br>  (4) Class @Controller: Thymeleaf and Api Rest  </br>  (5) Repository: JPA & H2 DB </br> (6) POM and dependencies </br> (7) **Root project** </br></br>     |   - [Repo rentingCar-Boot: commit](){.external target='_blank'} </br> - [Spring Boot create](/springboot/boot-what-create-th-h2.qmd){.external target='_blank'} |
|  | 11 | 07/10/2025 |  - Project: rentingCarBoot: <br> (1) UML, Car & Client object  <br> (2) UI: no UI, just JUnit tests <br> (3) Class @Service: CarService & ClientService  <br>  (4) Class @Controller: Thymeleaf and Api Rest  </br>  (5) Repository: JPA & H2 DB </br> (6) Create local H2 db</br></br>     |   - [Repo rentingCar-Boot: commit](){.external target='_blank'} |
|   |
|   | 12 | 09/10/2025 | - Project: rentingCarBoot: <br> (1) UML, Car & Client object  <br> (2) UI: no UI, just JUnit tests <br> (3) Class @Service: CarService & ClientService  <br>  (4) JPA: Java Persistence Api </br>  (5) Repository: JPA & H2 DB </br> (6) Create local H2 db </br></br>  - Git: fork and sync  </br> | - [Repo rentingCar-Boot: commit](){.external target='_blank'}  </br>  - [DDD and coupling](/javase/se-concepts-coupling.qmd){.external target='_blank'} </br></br>  |
|   | 13 | 10/15 | - Project: rentingCarBoot: <br> (1) UML, Car & Client object  <br> (2) UI: no UI, just JUnit tests <br> (3) Class @Service: CarService & ClientService  <br>  (4) CJPA: Java Persistence Api  </br>  (5) Repository: JPA & H2 DB </br> </br> - SPA vs. Multi-page</br>  - Managing time in Java: epoch, object, String</br>   |   - [Repo rentingCar-Boot: comit](https://github.com/AlbertProfe/rentingCarTest){.external target='_blank'}  </br> </br>  ![](/images/ifcd0021-1-25/spa-multipage.png){.lightbox width=80% fig-align="center"}  </br>  ![](/images/ifcd0021-1-25/spa-va-mpa-key-features-1024x800.png){.lightbox width=80% fig-align="center"}|
: Backlog course Sprint#4 October 2025 table {tbl-colwidths="[2,2,2,60,34]"}
:::

</div>

::: {.callout-note}
- `-` topic planned or done
- `----` topic pending to future
- `++` new topic not planned
:::

