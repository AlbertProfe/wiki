---
title: "IFCD0021-1-25 Sprint Backlog"
categories: [ifcd0021, backlog]
toc: true
number-sections: false
format:
  html
filters:
   - lightbox
lightbox: true
---

<style>

.heatMap th { background:  #f4f4f4;}
tr:nth-child(3) {background-color: #f4f4f4;}

th, td {
  padding: 8px;
  text-align: left;
  border-bottom: 1px solid #ddd;
}

tr:hover {background-color:  #f4f4f4;}

</style>

![Sprint Backlog](/images/home/backlog.jpg){width="30%"}

<div class="heatMap">

::: {.column-page-right}

##  ``Sprint#06 rentingCar-Boot: availability`` (October 2025)

| # | Day | Date | Topics |  Details Topics |
| -- | -- | -- | -- | -- |
| **06**  | 20 | 20/10//2025 |  - Plan Sprint#06 </br> - Why is so important having **Context**? Right/Left hemispheres, planning and decision-making </br> - How to plan sandbox-projects: UNL, hours/week, very clear product-goal, roadmap projects 1-year</br></br> - Project: rentingCar-Boot: <br> (1) UML, Car & Client object  <br> (2) UI: no UI, just JUnit tests <br>  (3) Repository: JPA & H2 DB </br> (4) **Feature**, car **availability by date**: data model and listing </br> (5) Updating data-model: where and how  </br>  </br>  - <s>JUnit: **asserts** </s></br> ++ HashMaps: intro </br> - WebApp: APIs  |   - [Repo rentingCar-Boot: f6d8ad4](https://github.com/AlbertProfe/rentingCarTest/tree/f6d8ad4ff932fed906aeb4a48aeac9ad73fc1a64){.external target='_blank'} </br> - [Spring Boot create](/springboot/boot-what-create-th-h2.qmd){.external target='_blank'} </br> </br> - [APIs](/devops/devops-network-protocols.qmd){.external target='_blank'}  </br></br> ![](https://albertprofe.dev/images/devops/api-protocls.png){.lightbox width=100% fig-align="center"} |
|  | 21 | 21/10/2025 |   - Project: rentingCar-Boot: <br> (1) UML, Car & Client object  <br> (2) UI: no UI, just JUnit tests <br>  (3) Repository: JPA & H2 DB </br> (4) **Feature**: car availability by date: booking and updating availability   </br> (5) <s>Booking updates availability, last step</s> </br> (6) **checkAvailability**  </br> (7) @ElementCollection for Map </br></br> - <s>JUnit: **asserts**</s>  </br> </br> - 4 approaches to available dstes for booking car: </br> (1) List of BookingDates  </br> (2) HashMap of Integer/Boolean </br> (3) List of unavailable Dates   </br> (4) Booking query </br></br>  ++ Wrappers and Containers </br> ++ Implement feature: model and populate, checkAvailability, generateBooking, update Car Map  |   - [Repo rentingCar-Boot: 1e60887f](https://github.com/AlbertProfe/rentingCarTest/tree/1e60887fe8dff38c73886a2fd1cc8e4c90b1db17){.external target='_blank'} </br> - [JPA: relationships](/springboot/boot-concepts-jpa-3.qmd){.external target='_blank'} </br> </br>   ![](/images/ifcd0021-1-25/generateBooking.png){.lightbox width=100% fig-align="center"} </br> </br> |
|   |
|   | 22 | 23/10/2025 | - Project: rentingCar-Boot: <br> (1) UML, Car & Client object  <br> (2) UI: no UI, just JUnit tests <br>  (3) Repository: JPA & H2 DB </br> (4) <s>Listing Boooking/Car</s> </br> (5) **GenerateBooking**  </br> - Implement feature: model and populate, checkAvailability, generateBooking, update Car Map  </br> ++ Orchestrator: GenerateBooking </br> ++ testUnixTimestampAvailability_Fail</br> ++ formatAvailabilityRanges  </br></br> - PRA#01, PRA#02, PRA#03: MF01, MF02, MF03 </br> </br> - <s>Git: clone, fork and pull request</s>    | - [Repo rentingCar-Boot: 972a0f153](https://github.com/AlbertProfe/rentingCarTest/tree/972a0f153038610dd9f0ed36fe71e0fe028728ff){.external target='_blank'}  </br>  - [DDD and coupling](/javase/se-concepts-coupling.qmd){.external target='_blank'} </br></br> - [PRA01-02-03 v3](https://github.com/AlbertProfe/rentingCarTest/blob/master/docs/PRA/PRA01-02-03.md){.external target='_blank'} </br></br> ![](/images/ifcd0021-1-25/orchestrator.png){.lightbox width=100% fig-align="center"} |
|   | 23 | 24/15/2025 | - Project: rentingCar-Boot: <br> (1) UML, Car & Client object  <br> (2) UI: no UI, just JUnit tests <br>  (3) Repository: JPA & H2 DB </br> (4) <s>Listing Boooking/Car</s>   </br> (5) **generateBooking: string Builder** </br> </br> - Why API Rest is a standard de facto?  </br></br> ++ Why Agile projects? Metrics (learning, tools, mooc, ..), Management (Iteration), Mindset </br> ++ Vocabulary: Container, Builder, Wrapper, Helper/Util, Pattern  </br> ++ Intro JPQL, JPA queries   </br> ++ Interface: intro | - [String Builder](https://github.com/AlbertProfe/rentingCarTest/blob/972a0f153038610dd9f0ed36fe71e0fe028728ff/rentingCar-boot/src/main/java/dev/app/rentingCar_boot/service/GenerateBooking.java#L26){.external target='_blank'} </br> </br> ![](/images/ifcd0021-1-25/featureLifeCycle.jpg){.lightbox width=80% fig-align="center"}  </br> - [JPA Queries](/springboot/boot-concepts-jpa-4.qmd){.external target='_blank'}  </br>  - [Soft lifeCycle](/devops/devops-what-lifecycle.qmd){.external target='_blank'}|
: Backlog course Sprint#06 October 2025 table {tbl-colwidths="[2,2,2,60,34]"}
:::

</div>

::: {.callout-note}
- `-` topic planned or done
- `----` topic pending to future
- `++` new topic not planned
:::

