---
title: "React JS: Create a React project"
subtitle: ReactJS Project
author: albertprofe
date: "06/01/2021"
date-modified: last-modified
date-format: full
description: description
categories: [reactjs, project, devtools]
toc: true
number-sections: true
format:
  html
---

# ReactJS Starting

## React Directly in HTML

Start by including three scripts, the first two let us write React code in our JavaScripts, and the third, Babel, allows us to write JSX syntax and ES6 in older browsers.

``` html
<!DOCTYPE html>
<html>
  <head>
    <script src="https://unpkg.com/react@18/umd/react.development.js" crossorigin></script>
    <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js" crossorigin>
    </script>
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
  </head>
  <body>

    <div id="mydiv"></div>

    <script type="text/babel">
      function Hello() {
        return <h1>Hello World!</h1>;
      }

      ReactDOM.render(<Hello />, document.getElementById('mydiv'))
    </script>

  </body>
</html>

```

## Install Nodejs and npm

To create a new ``React app``, you will need to have the following software installed on your computer:

1. ``Node.js``: This is a JavaScript runtime that is used to execute JavaScript code outside of a web browser. You can download the latest version of ``Node.js`` from the official website (https://nodejs.org/) or through a package manager like Homebrew (Mac) or Chocolatey (Windows).
2. ``npm``: This is the package manager for ``Node.js``, which is used to manage the libraries and dependencies that your app uses. npm is included with ``Node.js``, so you don't need to install it separately.

::: {.callout-tip}
``npx`` is a tool that is included with npm, the package manager for ``Node.js``. It allows you to execute packages that are installed locally or globally in your project's node_modules directory.
:::

## `create-react-app`

Whether youâ€™re using React or another library, [Create React App](https://create-react-app.dev/){.external} lets you focus on code, not build tools.

To create a project called my-app, run this command:

``` bash
npx create-react-app my-app
```
![Create project](/images/reactjs/createproject.svg)

## Install `create-react-app`

Updating your build tooling is typically a daunting and time-consuming task. When new versions of Create React App are released, you can upgrade using a single command:

``` bash
npm install react-scripts@latest
```

## React Developer Tools

![The easiest way to debug websites built with React is to install the React Developer Tools browser extension.](/images/reactjs/react-devtools-extension.png){width="80%"}

Use React Developer Tools to inspect React components, edit props and state, and identify performance problems.

- [Install for Chrome](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?hl=en){.external}
- [Install for Firefox](https://addons.mozilla.org/en-US/firefox/addon/react-devtools/){.external}
- [Install for Edge](https://microsoftedge.microsoft.com/addons/detail/react-developer-tools/gpphkfbcpidddadnkolkpfckpihlkkil){.external}

For other browsers (for example, Safari), install the react-devtools npm package:

``` bash
# Yarn
yarn global add react-devtools

# Npm
npm install -g react-devtools
```

<!--- navLinks -->
<br><br>
<div class=row>
<br>
<div class='column left previous'>
<br>
[{{< fa solid arrow-left >}} React JS: render virtual DOM](/reactjs/reactjs-what-render-dom.qmd)
<br>
</div>
<br>
<div class='column center'>
<br>
[{{< fa solid arrow-up >}} top](#top)
<br>
</div>
<br>
<div class='column right next'>
<br>
[React JS: Components  {{< fa solid arrow-right >}}](/reactjs/reactjs-what-components.qmd)
<br>
</div>
<br>
</div>
