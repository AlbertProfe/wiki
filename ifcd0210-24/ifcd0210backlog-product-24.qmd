---
title: "IFCD0210 Product Backlog"
categories: [ifcd0210, backlog]
toc: true
number-sections: false
format:
  html
---


![Backlog course](/images/home/backlog.jpg){width="30%"}

# Class Screen Recordings

Class Screen Recordings by month on AWS S3, **video/audio screen class .mp4**
</br>


<p style="text-align:center;">
<a href="https://drive.google.com/drive/folders/1Rn72noZjDC4E0ha6uzFYP3QwXkli8Vgv?usp=drive_link" target="_blank"><img src="/images/ifcd0210-24/computer-laptop-code-icon.png" alt="Recordings" height="116" width="147"> <figcaption style="text-align:center;">Screen recordings Google Drive</figcaption></a>
</p>

<p style="text-align:center;">
<a href="https://cifojava2024screenrecordings.s3.eu-central-1.amazonaws.com/index.html" target="_blank"><img src="/images/ifcd0210-24/computer-laptop-code-icon.png" alt="Recordings" height="116" width="147"> <figcaption style="text-align:center;">Screen recordings AWS S3 (migrating ...)</figcaption></a>
</p>

**Temporary link to AWS S3**

<mark>https://cifojava2024screenrecordings.s3.eu-central-1.amazonaws.com/index.html</mark>

# Product Backlog by Month

::: {.callout-tip title="Months"}
- [December 2023](/ifcd0210-24/ifcd0210backlog-product-24.qmd#december-2023)
- [January 2024](/ifcd0210-24/ifcd0210backlog-product-24.qmd#january-2024)
- [February 2024](/ifcd0210-24/ifcd0210backlog-product-24.qmd#february-2024)
- [March 2024](/ifcd0210-24/ifcd0210backlog-product-24.qmd#march-2024)
- [April 2024](/ifcd0210-24/ifcd0210backlog-product-24.qmd#april-2024)
- [May 2024](/ifcd0210-24/ifcd0210backlog-product-24.qmd#may-2024)
- [June 2024](/ifcd0210-24/ifcd0210backlog-product-24.qmd#june-2024)
- [July 2024](/ifcd0210-24/ifcd0210backlog-product-24.qmd#july-2024)
:::



::: {.column-page-right}

## December 2023


| Sprint | Day | Date | Topics |  Details Topics |
| -- | -- | -- | -- | -- |
| #1 | 1 | 19/12/2023 | - Course Presentation </br>  - Methodologies introduction: learning, sprints & paths  </br> - **Course Syllabus**: </br>Java Helsinki MOOC, Full Stack, Front-end, Server, Project, SCRUM, Git & DevOps, Linux and OS </br>  - Set up tools: Linux, Network, Account, IDEs, Git, Documentation | - [Mooc Java](/javase/se-what-moocsyllabus.qmd) </br>  - [Deep Dive Into Modern Web Development](https://fullstackopen.com/en/){.external} / [Full Stack Web Development, Open Uni: Full Stack Web Development 5 cr](https://studies.helsinki.fi/courses/course-implementation/otm-dbf5a51d-2121-4110-af0f-f1e8f0b74fb9){.external}  / [Full Stack ](https://www.helsinki.fi/en/admissions-and-education/open-university/multidisciplinary-themed-modules/full-stack){.external}</br> - [Answering the useful (right?) questions](/learning/learning-how-questions.qmd) |
|  | 2 | 21/12/2023 | - Set up tools: Linux, Network, Account, IDEs, Git, Documentation </br> - <s>IDE: IntelliJ Idea </br> - Maven & Java SE project</br></s> ++ IDE: TMC-NetBeans </br> ++ Manage Time&Mind: </br> (1) Keep Calm & Walk Away: Negative Logic, Pavoland, One tool JUST TO one problem, Optimal Solution, Give Up, Stress, Burnt out </br> (2) Plan your energy: match energy with tasks </br> ++ Bash example scripting | - [Idea](/devops/devops-ide-intelljidea.qmd) </br> - [Pavoland](/scrum/scrum-week1.qmd#lindy-effect--turkey-parable) </br> - [Bash executable](/linux/linux-distros-mint.qmd#make-a-bash-script-executable) </br> - [What is Bash?](/linux/linux-what-bash.qmd) </br> - [TMCBeans MOOC Helsinki Java 2023](/linux/linux-distros-mint.qmd#tmcbeans-mooc-helsinki-java-2023)  |
|  | 3 | 22/12/2023 |  - Set up tools: Linux, Network, Account, IDEs, Git, Documentation <s></br> - IDE: Visual Code </br> - Create React App </br></s> ++ UML </br> ++ Documentation: quarto & .md | - [Visual Code](/devops/devops-ide-visualcode.qmd) </br> - [Quarto Create](/markup/markup-quarto-create.qmd) </br> -[Lab#SE00-1](/javase/selab0-1.qmd) </br> - [UML](/javase/se-pattern-uml.qmd)|
: Backlog course December 2023 table {tbl-colwidths="[2,2,2,60,34]"}

## January 2024

| Sprint | Day | Date | Topics |  Details Topics |
| -- | -- | -- | -- | -- |
| #2 | 4 | 08/01/2024 | - Linux </br> <s> - Bash  </br> </s> - Time Management categories: </br>  (1) Mindset/Grow </br>  (2) Execution/Code-Algorithm </br> (3) Architecture/Programming </br> (4) Learning/A-Ha-Moment </br> (5) Personal/Path </br>  -  4 cognitive tempos: Plan - Execute - Revision - Reflection </br>  How does brain learn? Picnic > Mechanism > Consolidate  </br> - Intro API Rest | - [Simple, complicate, complex problem](https://www.conversationagent.com/2015/11/simple-complicated-and-complex-problems.html){.external} <br> ![Simple, Complicated, Complex](/images/ifcd0210-24/simple-complicated-complexi.png)  </br> - [Api Rest](/markup/markup-quarto-api-rest.qmd) |
|  | 5 | 09/01/2024 | - <s>Git </br>  - Quarto</s> </br>  - Intro Architecture: request response cycle, SPA & Server-side rendering, JPA </br>  Time Management Tasks: </br> (1) Mooc </br> (2) Notes / Documentation / Reading / Prepare classes & lessons / Vocabulary </br> (3) Architecture / UML / Domains </br> (4) Personal Project </br> (5) Linux Devops </br> (6) Timetable <br> - Linux install soft: apt / snap / software manager  </br></br> *Homework: client-server architecture, request/response cycle, MVC, SPA versus server-side rendering* | - [Request Response Cycle](/springboot/boot-what-cycle.qmd) </br> - [Spring MVC](/spring/spring-mvc.qmd) </br> ![Spring Boot flow architecture](/images/springboot/springboot-architecture-2.png)  </br>  - [Spring Boot flow](/springboot/boot-concepts-injection.qmd)|
|  | 6 | 11/01/2024 | - <s>UML</s> </br> - Linux: install apps, clone, snapshop, software manager, mirrors, repositories, update, upgrade, sudo, apt, snap </br>  - Concepts: **domain & immutability**   </br> - Quarto domain: local, remote, gh-pages, collaborative, auth (gh auth login, user commit&push, code sign in sync) | ![quarto, use case: remote-local, local-remote](/images/ifcd0210-24/photo_2024-01-12_08-07-59.jpg)  |
|  | 7 | 12/01/2024 | - <s>UML: restaurant</s>  </br>  ++ React Intro   </br>  - System tools linux: </br>  (1)  **System** reports, manager, settings, info </br> (2) Update, archive, software, driver, power, synaptic **manager**   </br> (3) disk analyzer, disks  </br> (4) GParted  </br> (5) Htop `sudo apt-get install htop`  </br>  | - [UML](/javase/se-pattern-uml.qmd) </br> - [UML exemples](https://drive.google.com/drive/folders/1l5kCv2TkFey-SsKjrFBiMtFslb0R4xVP?usp=sharing){.external} </br>  - [IBM: An introduction to the Unified Modeling Language](https://developer.ibm.com/articles/an-introduction-to-uml/){.external}  </br>  - [GParted](https://gparted.org/download.php){.external}  |
| #3 | 8 | 15/01/2024 |  - <s>UML: restaurant  </br> - Idea: create Maven Java Project </br> - Classes: Person, Waiter, Menu, Order  </s></br>  ++ Mind Management: What is preventing you from planning the week? </br> ++ How to make a week plan  </br>  ++ Concepts: Architecture, MVC, Patterns, UML, Business Logic  |  - [UML](/javase/se-pattern-uml.qmd) </br> - [UML exemples](https://drive.google.com/drive/folders/1l5kCv2TkFey-SsKjrFBiMtFslb0R4xVP?usp=sharing){.external} </br>  - [IBM: An introduction to the Unified Modeling Language](https://developer.ibm.com/articles/an-introduction-to-uml/){.external}  </br> - <s> [Create Project Maven Java SE](/javase/se-concepts-createproject.qmd)  </br> - [Create Project Spring Boot](/springboot/boot-what-create.qmd) </s></br>  - [MVC](/spring/spring-mvc.qmd) </br>  - [Client Server](/devops/devops-network-clientserver.qmd) </br> - [Car architecture: chassis, engine and steering wheel](https://www.thehenryford.org/collections-and-research/digital-collections/expert-sets/101113/){.external} </br> ![First Car](/images/ifcd0210-24/car-henry-ford.jpg) |
|  | 9 | 16/01/2024 | - UML: restaurant </br> - Classes: Person, Waiter, Menu, Order </br> - Create Methods and define features  </br> - Tasks Categories: </br> (1) Project </br> (2) DDD </br>  (3) UML/PseudoCode </br>  (4) Code </br> </br> *Homework: </br>  Mermaid* | - [Create Project: Maven Java SE](/javase/se-concepts-createproject.qmd)</br> - [What is Maven](https://mvnrepository.com/){.external} / [Central Maven](/javase/se-concepts-maven.qmd) </br>  </br> - [Create Project: Spring Boot](/springboot/boot-what-create.qmd) </br>  - [Creaate Project: ReactJS](/reactjs/reactjs-what-create.qmd) </br> - [Create Project: Quarto](/markup/markup-quarto-create.qmd)  </br></br>  - [Class Diagram](https://mermaid.js.org/syntax/classDiagram.html){.external} </br> </br>  [![UML](https://mermaid.ink/img/pako:eNqNUsFOwzAM_ZXIR1gluPbMkQJicCIcvMYbkdKkJA5omvbvJE3HMk1DRFFkPT_bz4530DtF0ELTNNKyZkOteKbAGD1aFh1a3NBAyfy6Ea_dvegNhnCnceNxkHYKO4VEuum84MqQkHArQTTNVbJssh69Il8IHdl4yV8YU96SaFeQfK6X7LXdCIsDnaOKQu_1yNrZyqmT_k_eHpCjp1j7ut4koa6nkEnk57yay9yHOKwOTdXOb9R8bOZXx0huNFSpmXF2jOYJt3nYlWvlnBEjanWSqEyX81uheaRv7yJliOHPHjPx3yO9IGzqxeu-jgglonfWcsWeFcACBvJD6iUt3FReAn-k7ZLQJlPRGqNhCdJmKkZ2y63toWUfaQFxzH8wrxm0azQhoaQ0O9-VJZ52ef8Dik3ZjA?type=png)](https://mermaid.live/edit#pako:eNqNUsFOwzAM_ZXIR1gluPbMkQJicCIcvMYbkdKkJA5omvbvJE3HMk1DRFFkPT_bz4530DtF0ELTNNKyZkOteKbAGD1aFh1a3NBAyfy6Ea_dvegNhnCnceNxkHYKO4VEuum84MqQkHArQTTNVbJssh69Il8IHdl4yV8YU96SaFeQfK6X7LXdCIsDnaOKQu_1yNrZyqmT_k_eHpCjp1j7ut4koa6nkEnk57yay9yHOKwOTdXOb9R8bOZXx0huNFSpmXF2jOYJt3nYlWvlnBEjanWSqEyX81uheaRv7yJliOHPHjPx3yO9IGzqxeu-jgglonfWcsWeFcACBvJD6iUt3FReAn-k7ZLQJlPRGqNhCdJmKkZ2y63toWUfaQFxzH8wrxm0azQhoaQ0O9-VJZ52ef8Dik3ZjA) |
|  | 10 | 18/01/2024 | - Git </br> - Quarto: **create a project and push to github** </br>  - What is the publishing system & quarto engine:</br> **.qmd > pandoc > .html > git > github > gh-pages > www** </br>- <s>Create Lab#SE04-1: healthy Food </s> </br>  ++ Project phases: tentative, candidates, release, optimums  </br>  ++ Vocabulary **EcoSystem:**</br> (1) Software Core tools: framework/engine/publishing system, Code language, SDK (software development kit) </br> (2) Development tools: Configuration system and format (.xml, .json, .yml ), Dependencies & packages management </br> (3) Developer tools: IDE, debugger, collaborative & version control, documentation (*Mermaid*) </br> (4) DevOps: test, deploy </br> - Before Team Work: listen, ask and words (vocabulary)  |  - [Quarto Markdown basics](/markup/markup-quarto-basics.qmd) </br>  - [Markdown guide](https://www.markdownguide.org/){.external}  </br>  - [Markdown sandbox](https://dillinger.io/){.external}  </br> - [Markdown tutorial](https://commonmark.org/help/tutorial/){.external} </br></br> - [What is an SDK?](https://www.redhat.com/en/topics/cloud-native-apps/what-is-SDK){.external} </br></br>  - [Quarto tentative project](https://github.com/AlbertProfe/testTentative1){.external} |
|  | 11 | 19/01/2024 | - <s> React introduction: the render cycle   </br> - React Principles: SPA, COP, Virtual DOM, JSX, Hooks, Route </br> - Install nvm: Node Version Manager & create a React Project </s>  </br>  - Quarto: **create a project, push to github, publish** </br> - Quarto Ecosystem/Architecture/Pipeline </br></br>  *Homework:  </br> Git and Quarto * | - [React JS: Introduction](/reactjs/reactjs-what-principles.qmd) </br> - [React JS: Create a React project](/reactjs/reactjs-what-create.qmd) </br></br> - [Quarto publish](/markup/markup-quarto-publish.qmd) </br>  - [Git](/devops/devops-vc-git.qmd)  |
| #4 | 12 | 22/01/2024 | - <s>**healthyFood CLI App**</br> (1) Project: mockUp, user-case, versions, iterations  </br> (2) Domains  </br> (3) UML, flow-diagram & pseudo-code </br> (4)  code in intelliJ Idea </br></br> - healthyFood push to GitHub </br> (1) set up tools </br> (2) 3-auth </br> (3) repos local & remote </br> (4) first commit & push </s> </br> ++ Git: basics | - [Git Alatassian: Setting up a repository](https://www.atlassian.com/git/tutorials/setting-up-a-repository){.external}  </br>  - [Git Alatassian: Git commit](https://www.atlassian.com/git/tutorials/saving-changes/git-commit){.external} </br> - [Git Alatassian: Git Revert](https://www.atlassian.com/git/tutorials/undoing-changes/git-revert){.external} </br> - [Git Alatassian: Git Checkout](https://www.atlassian.com/git/tutorials/using-branches/git-checkout){.external} </br>  ![](/images/ifcd0210-24/git-map.jpg)  </br> |
|  | 13 | 23/01/2024 | - <s> **healthyFood CLI App**</br>  code, static & non-static, methods </s> </br>  - **healthyFood CLI App**</br> (1) Project: mockUp, user-case, versions, iterations  </br> (2) Domains  </br> (3) UML, flow-diagram & pseudo-code </br> (4)  code in intelliJ Idea </br></br> - healthyFood push to GitHub </br> (1) set up tools </br> (2) 3-auth </br> (3) repos local & remote </br> (4) first commit & push </br> </br> - healthyFood CLI App v0.0  | - [W3 Schools Java Hashmaps](https://www.w3schools.com/java/java_hashmap.asp){.external} </br> - [W3 Schools Java Hashmaps sandbox](https://www.w3schools.com/java/tryjava.asp?filename=demo_hashmap_put){.external}  </br> </br>  - [GitHub code v0.0](https://github.com/AlbertProfe/hello11/tree/59000f69fc5ab0d42390c3a9f8a28f0b55cc48c3){.external} </br>  - [Lab#SE04-1](/javase/selab4-1.qmd)|
|  | 14 | 25/01/2024 | -  React introduction: the render cycle   </br> - React Principles: SPA, COP, Virtual DOM, JSX, Hooks, Route </br> - Install nvm: Node Version Manager & create a React Project   </br> -   **healthyFood React App**: JSX components | - [React JS: Introduction](/reactjs/reactjs-what-principles.qmd) </br> - [React JS: Create a React project](/reactjs/reactjs-what-create.qmd) </br> - [React Components](/reactjs/reactjs-what-components.qmd)</br> - [Learn React: Describing the UI](https://react.dev/learn/describing-the-ui){.external} </br> </br> - [Lab#RE06-1](/reactjs/rjslab6-1.qmd) |
|  | 15 | 26/01/2024 | - **healthyFood React App**: data and props</br> </br>  *Homework: </br>  (1) What is the difference btw Literal JS Object, JSON, Java Object  </br>  (2) Check the* **Describing UI from React**    | - [Lab#RE06-1](/reactjs/rjslab6-1.qmd) </br> - [GitHub code v0.1](https://github.com/AlbertProfe/healthyfoodFront/tree/5fdd2426c239f75de0fcaf4dc681b32d44a8bd99){.external}  </br> </br>   -  [JSON crack](https://jsoncrack.com/editor){.external}  </br> - [No, really, what is JSON?](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/JSON#no_really_what_is_json){.external} </br> - [Working with Literal Objects JS](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects){.external} </br>  - [What is JSON?](https://www.w3schools.com/whatis/whatis_json.asp){.external}   </br>  |
| #5 | 16 | 29/01/2024 |  - JUnit Testing & debugger </br> - Dependencies: Junit, Lombok, JavaFaker </br> - UML healthyFood, growing UML class-diagram flux: </br> (1) adding UI as CLI </br>  (2) controller  </br>  (3) fake DB class and Manager  |  - [Class and objects](/javase/se-concepts-objects.qmd) </br> - [Testing](/javase/se-concepts-tdd.qmd) </br> - [Example Controller and Manager: Lab#SE02-04](/javase/selab2-4.qmd)  </br> - [Lab#SE04-1](/javase/selab4-1.qmd)</br>  </br>  ![](/images/ifcd0210-24/healthyFood_v.1.jpg) </br></br> <mark> [Screen video: Monday](https://drive.google.com/file/d/1Kf2a0nhyDvf3pXwFzzdZ13akPfQqetNf/view){.external target='_blank'} </mark> |
|  | 17 | 30/01/2024 | - Main Loop and static methods </br>  - MVC: what is really a **Controller** </br>  - MVC: what is really a **Manager** </br>  ++ Git: pull request, git visual Idea   | - [Non-static class: Person](https://java-programming.mooc.fi/part-5/4-objects-and-references){.external} </br >- [Lab#SE04-1](/javase/selab4-1.qmd) </br> - [Class and objects](/javase/se-concepts-objects.qmd){.external} </br> </br></br> <mark> [Screen video: Tuesday](https://drive.google.com/file/d/1UEDWYormrtyPNZtgOnEWtNKMf0F6PNHz/view){.external target='_blank'} </mark>    |
|  | 18 | 01/02/2024 | - React: composing the UI: <br> (1)  UI as a tree, DOM, Render cycle  </br>  (2)  rendering data, list, images </br>  (3)  the rules of JSX  </br> (4) using Js within HTML: **simple/double curly braces**  </br>  (5) props </br> (6) conditional rendering </br>   | - [Render Cycle](/reactjs/reactjs-what-render-dom.qmd){.external} </br>  - [Rendering lists](https://react.dev/learn/describing-the-ui#rendering-lists){.external},  [Mapping lists](https://react.dev/learn/rendering-lists){.external} </br>  - [The Rules of JSX](https://react.dev/learn/writing-markup-with-jsx#the-rules-of-jsx){.external} </br>  - [Using curly braces: A window into the JavaScript world](https://react.dev/learn/javascript-in-jsx-with-curly-braces#using-curly-braces-a-window-into-the-javascript-world){.external} </br>- [Passing Props to a Component](https://react.dev/learn/passing-props-to-a-component){.external} </br>- [Conditional Rendering](https://react.dev/learn/conditional-rendering){.external} </br>  </br>  <mark> [Screen video: Thursday-1](https://drive.google.com/file/d/13-TCIAxa8xCVX9-akhYBViRHba9lj9Oe/view){.external target='_blank'} </mark></br> <mark> [Screen video: Thursday-2](https://drive.google.com/file/d/10ZmW_B3XHmnQ1SW6TRTYj5xgweH6oanR/view){.external target='_blank'} </mark>   |
|  | 19 | 02/02/2024 | - Pure components React </br> - React SPA vs Server side rendering </br> ++ Intro hooks  | - [Keeping Components Pure](https://react.dev/learn/keeping-components-pure){.external} </br>  -  [Props and states](/reactjs/reactjs-what-props.qmd)  </br>  - [Lab#RE06-1](/reactjs/rjslab6-1.qmd) </br> </br>  <mark> [Screen video: Friday](https://drive.google.com/file/d/17oVNwzxk5zd5MgEIRtqxEhx1wD5AssGl/view){.external target='_blank'} </mark></br>  |
: Backlog course January 2024 table {tbl-colwidths="[2,2,2,60,34]"}



## February 2024

| Sprint | Day | Date | Topics |  Details Topics |
| -- | -- | -- | -- | -- |
| #6 | 20 | 05/02/2024 |  |  |
|  | 21 | 06/02/2024 |  |  |
|  | 22 | 08/02/2024 |  |  |
|  | 23 | 09/02/2024 |  |  |
| #7 | 24 | 12/02/2024 |  |  |
|  | 25 | 13/02/2024 |  |  |
|  | 26 | 15/02/2024 |  |  |
|  | 27 | 16/02/2024 |  |  |
| #8 | 28 | 19/02/2024 |  |  |
|  | 29 | 20/02/2024 |  |  |
|  | 30 | 22/02/2024 |  |  |
|  | 31 | 23/02/2024 |  |  |
| #9 | 32 | 26/02/2024 |  |  |
|  | 33 | 27/02/2024 |  |  |
|  | 34 | 29/02/2024 |  |  |
|  | 35 | 01/03/2024 |  |  |
: Backlog course February 2024 table {tbl-colwidths="[2,2,2,64,30]"}

## March 2024

| Sprint | Day | Date | Topics |  Details Topics |
| -- | -- | -- | -- | -- |
| #10 | 36 | 04/03/2024 |  |  |
|  | 37 | 05/03/2024 |  |  |
|  | 38 | 07/03/2024 |  |  |
|  | 39 | 08/03/2024 |  |  |
| #11 | 40 | 11/03/2024 |  |  |
|  | 41 | 12/03/2024 |  |  |
|  | 42 | 14/03/2024 |  |  |
|  | 43 | 15/03/2024 |  |  |
| #12 | 44 | 18/03/2024 |  |  |
|  | 45 | 19/03/2024 |  |  |
|  | 46 | 21/03/2024 |  |  |
|  | 47 | 22/03/2024 |  |  |
: Backlog course March 2024 table {tbl-colwidths="[2,2,2,64,30]"}

## April 2024

| Sprint | Day | Date | Topics |  Details Topics |
| -- | -- | -- | -- | -- |
|  |  |  |  |  |
|  |  |  |  |  |
|  |  |  |  |  |
|  |  |  |  |  |
: Backlog course April 2024 table {tbl-colwidths="[2,2,2,64,30]"}

## May 2024

| Sprint | Day | Date | Topics |  Details Topics |
| -- | -- | -- | -- | -- |
|  |  |  |  |  |
|  |  |  |  |  |
|  |  |  |  |  |
|  |  |  |  |  |
: Backlog course May 2024 table {tbl-colwidths="[2,2,2,64,30]"}

## June 2024

| Sprint | Day | Date | Topics |  Details Topics |
| -- | -- | -- | -- | -- |
|  |  |  |  |  |
|  |  |  |  |  |
|  |  |  |  |  |
|  |  |  |  |  |
|  |  |  | + Formació Copmplementària | - |
|  |  |  | + Formació Copmplementària | - |
: Backlog course June 2024 table {tbl-colwidths="[2,2,2,64,30]"}

## July 2024

Finishing `Pràctiques`

:::

<!--- navLinks -->
<br><br>
<div class=row>
<br>
<div class='column left previous'>
<br>
[{{< fa solid arrow-left >}} IFCD0210 Sprint Backlog](/ifcd0210-24/ifcd0210backlog-sprint-24.qmd)
<br>
</div>
<br>
<div class='column center'>
<br>
[{{< fa solid arrow-up >}} top](#top)
<br>
</div>
<br>
<div class='column right next'>
<br>
[IFCD044 Official Docs  {{< fa solid arrow-right >}}](/ifcd044/ifcd044.qmd)
<br>
</div>
<br>
</div>
