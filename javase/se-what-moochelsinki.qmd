---
title: "Java MOOC Helsinki"
subtitle: Java Training
author: albertprofe
date: "06/01/2021"
date-modified: last-modified
date-format: full
description: Java SE training by MOOC Helsinki Programming Java
categories: [javase, training, helsinki, mooc]
toc: true
number-sections: true
format:
  html
---

## About the course

::: {.column-margin}
![Java MOOC Programming University of Helsinki](/images/javase/moochelsinki.png){.image-preview}
:::

Welcome to the University of Helsinki’s free [massive open online course (MOOC) on programming](https://java-programming.mooc.fi/)! This is an updated version of our popular course **Object-Oriented Programming with Java.**

During this course, you will learn the basics of computer programming, along with algorithms and object-oriented programming through the Java programming language. The course includes comprehensive materials and plenty of programming exercises - all of which are tested using our automatic testing service Test My Code.

## Target

**Anyone can join - no previous programming knowledge is required.**

Unlike many programming courses found online, ours is completely unabridged; the course’s scope and material are identical to our CS1 Introduction to Programming and Advanced Programming courses.

::: {.column-margin}
This is the first course in our computer science learning track, and we use industry-grade tooling from day one. As such, the course is about programming in a real integrated development environment (IDE) instead of a browser or an educational IDE.
:::

The course does not require separate registration. You can simply dive into the first part of the course found over here.

## Course Contents

The course is split up into two individual courses:

- Java Programming I
- and Java Programming II

Each course consists of seven parts, each with its own exercise set. Completing a single part takes approximately 5-20 hours, and we recommend reserving at least 10 hours per part, depending on prior skills with computers.


## Helsinki’s (MOOC) on programming Java

::: {.callout-note}
Welcome to the University of Helsinki’s free massive open online course (MOOC) on programming! This is an updated version of our popular course Object-Oriented Programming with Java.

:::

During this course, you will learn the basics of computer programming, along with algorithms and object-oriented programming through the Java programming language. The course includes comprehensive materials and plenty of programming exercises - all of which are tested using our automatic testing service Test My Code.

- [Java Programming](https://java-programming.mooc.fi/){.external}
- [Java Programming I - Part 1](https://java-programming.mooc.fi/part-1){.external}
- [Java Programming II - Part 8](https://java-programming.mooc.fi/part-8){.external}
- [TMC - Test My Code](https://tmc.mooc.fi/){.external}
- [Download and install NetBeans - TMC](https://www.mooc.fi/en/installation/netbeans/){.external}

### Create an account 

This course uses [mooc.fi](https://java-programming.mooc.fi/sign-up){.external} accounts. If you have previously done mooc.fi -courses, you can log in with your existing account. On this page you can create a new account, which works on majority of mooc.fi courses and services.

- [Create TMC account](https://java-programming.mooc.fi/sign-up){.external}

![](/images/javase/mooc0-create-account.png)

### Log in to the development environment

Start the TMCBeans development environment you installed.
When the environment starts, it asks for your e-mail address and password.
Use the details of your MOOC.fi account you created in the previous step.

![](/images/javase/mooc1-linux-tmcbeans-login.png)

### Select your organization

The development environment asks the organization you do the exercises for.
Select the organization mentioned in the course material.
For example the organization for "Programming MOOC 2020" the organization is "MOOC".

![](/images/javase/mooc2-linux-tmcbeans-select-organization.png)

### Select your course

After this, select the correct course. The course name is mentioned in your course material. The courses you see listed here depend on your organization.

![](/images/javase/mooc3-linux-tmcbeans-select-course.png)

### Doing your first coding exercise

::: {.callout-note}
Next we will go through step by step how you can complete the first exercise of "Programming MOOC 2020". Even if you are doing another course, read the instructions to the end because they contain important information about the development environment.
:::


**Download the exercises**

After you have logged in to the development environment and selected your organization and course, TMC will suggest exercises you can download (if there are any available). Download the exercises you want -- the exercises have to do with the course material of the course you have selected.

Now you should have the exercises downloaded to the development environment.

You can see the exercises listed on the left. Select the Projects-tab, and a small circles indicating completed exercises appear.

![](/images/javase/mooc4-tmcbeans-project-sidebar.png)


### Do an exercise

> Open exercise Part01_01.AdaLovelace.

Double click the exercise, and look for a source code file called AdaLovelace.java. 

Currently all source code files can be found from **"Source Packages"** directory in the exercise template.

You can open the exercise to the editor view by double clicking the file AdaLovelace.java. The editor view is the text editor at the middle of the TMC window, where you can make changes to the source code of a program.

Modify the source code so, that you see the following on your editor:

```
    public class AdaLovelace {
        public static void main(String[]args){
            System.out.println("Ada Lovelace :D");
        }
    }
```

### Running the source code

You can run the source code by clicking the Run button on TMC.

![](/images/javase/mooc5-linux-tmcbeans-toolbar-run.png)


### Testing the source code
Exercises often have automatic tests, which give you feedback on your solution.

You can run the tests by clicking the Test button on TMC.

![](/images/javase/mooc6-linux-tmcbeans-toolbar-test.png)

### Sending your solution to the server

Sending your solution to the server means submitting your exercise for grading. The exercises are almos always graded automatically, so you get your points (or a warning message) fast.

You can submit your solution either after all tests have passed, or separately by clicking the submit button on TMC.


![](/images/javase/mooc7-linux-tmcbeans-toolbar-submit.png)

::: {.callout-important Title="Checking your points"}
You can check your points by logging in to [tmc.mooc.fi](https://tmc.mooc.fi/){.external} Use your MOOC.fi account to log in to the service.
:::


## TMCBeans does NOT start

### Windows

#### Step-by-step

1. Go to ```C:\ProgramFiles\TMCBeans\etc```
2. Open **tmcbeans.conf** on any text editor
3. Find **jdkhome** line and **uncomment it by removing the "#"** at the beggining of the line
4. Add the path to your JDK on it - it could be ```jdkhome="C:\Program Files\Zulu\zulu-11``` but your's will be different


#### Screenshots

First at all localice all your JDK-JRE packages.

![](/images/javase/mooc10.png)

Remember that TMCBeans runs with JDK-11

![](/images/javase/mooc11.png)

TMCBeans does NOT run with JDK above 11

![](/images/javase/mooc12.png)


Open the file and modify the line where the TMCBeans execute JDK-JRE

![](/images/javase/mooc13.png)

![](/images/javase/mooc14.png)

Be careful, in Windows you will need Administrator permission to save the configuration file.

![](/images/javase/mooc15.png)


## Linux

For tmcbeans you must work with jdk8 or jdk11 in Linux, but never with higher ones. Therefore:

- Set up your system to 8:
  - [How to set default Java version?](https://askubuntu.com/questions/121654/how-to-set-default-java-version){.external}

Otherwise, it is a matter of **local path java variables**:

- Local Path Variable:
  - [Setting Java variables on Linux](https://www.ibm.com/docs/ja/b2b-integrator/6.0.3?topic=variables-setting-java-linux){.external}
  - [To Set PATH on Linux](https://docs.oracle.com/cd/E19062-01/sun.mgmt.ctr36/819-5418/gaznb/index.html){.external}



<!--- navLinks -->
<br><br>
<div class=row>
<br>
<div class='column left previous'>
<br>
[{{< fa solid arrow-left >}} Java Standard Edition: Principles](/javase/se-what-principles.qmd)
<br>
</div>
<br>
<div class='column center'>
<br>
[{{< fa solid arrow-up >}} top](#top)
<br>
</div>
<br>
<div class='column right next'>
<br>
[{{< fa solid arrow-left >}} Java SE: Mooc Helsinki Syllabus](/javase/se-what-moocsyllabus.qmd)
<br>
</div>
<br>
</div>
