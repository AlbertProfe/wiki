---
title: "Java SE: Project push GitHub"
---
## Maven Project push to GitHub: CLI gh

To connect a local project on **IntelliJ IDEA** to GitHub.com, you will need to create a repository on GitHub and then push your local project to the repository. Here's a step-by-step guide:

From ``CLI gh``:

1. Go to browser and create an **account** on GitHub.com
2. Open on your terminal and **install** ``git``: [install git](/devops/devops-vc-git.qmd) 
3. Open your terminal and **install** ``cli gh``: [install CLI gh](/devops/devops-vc-github.qmd#install-cli-gh) and **log in to GitHub.com**
4. **Create** repository on GitHub.com: [Create a repo](https://docs.github.com/en/get-started/quickstart/create-a-repo)
5. At the top of your GitHub repository's Quick Setup page, click the clipboard icon to copy **clone GitHub CLI**: ``gh repo clone AlbertProfe/wiki``. This will initialize the local directory as a Git repository with a copy of remote repository.
6. Create Maven Project within that directory/repository local git: [create Maven Project](/javase/se-concepts-createproject.qmd)
7. **Upload/sync/push**: ``git commit and push`` from CLI or from **IntelliJ IDEA**: [Commit and push changes to Git repository](https://www.jetbrains.com/help/idea/2022.3/commit-and-push-changes.html#commit)

### Screen-shoots step-by-step after installing git and github (2022-12-19)

First, install ``git`` and ``CLI gh`` and create a GitHub.con account.

![Log in via CLI gh to GitHub.com, in this case using a browser where you are logged in GitHub.com](/images/javase/se-projectgit/login_cli_gh_createrepo.png)

![Create a repo at GitHub.com: button new](/images/javase/se-projectgit/newrepo.png)

![Create a repo at GitHub.com: name and configuration](/images/javase/se-projectgit/newrepo2.png)

![Create a repo at GitHub.com: created](/images/javase/se-projectgit/newrepo3.png)

![Get the code to clone the repo: copy](/images/javase/se-projectgit/newrepo4.png)

![Create/select a folder where the repo will be created](/images/javase/se-projectgit/createproject1.png)

![Go to the terminal and paste it](/images/javase/se-projectgit/clone_repo.png)

![Create maven project: create](/images/javase/se-projectgit/createproject2.png)

![Create maven project: created and structure checked](/images/javase/se-projectgit/createproject3.png)

![Let's add and commit this project](/images/javase/se-projectgit/push1.png)

![8 added files](/images/javase/se-projectgit/push2.png)

![Now it is time to commit, first write it](/images/javase/se-projectgit/push3.png)

![Visual Code and git making the commit](/images/javase/se-projectgit/push4.png)

![Commit done, now, the push to remote repo](/images/javase/se-projectgit/push5.png)

![After push button Visual Code demands confirmation](/images/javase/se-projectgit/push6.png)

![Pushing .... and pushed](/images/javase/se-projectgit/push7.png)

![Check GitHub.com repo has got the project pushed](/images/javase/se-projectgit/push8.png)

## Maven Project push to GitHub: from **IntelliJ IDEA**

1. Open your **IntelliJ IDEA** project.
2. In the ``VCS`` menu, select the option to **enable** version control integration.
3. Select ``Git`` as the version control system.
4. **Add** the files in your new local repository. This stages them for the first commit.
5. **Commit** the files that you've staged in your local repository.
6. In the `VCS` menu, select the option to create a ``new repository``.
7. Choose the location for the repository and click the ``Create`` button.
8. In the ``VCS`` menu, select the option to push changes.
9. Enter your ``GitHub login credentials`` and click the ``Push`` button.

Now your local project is connected to the repository on GitHub and any changes you make locally will be reflected in the repository on GitHub.
<!--- navLinks -->
<br><br>
<div class=row>
<br>
<div class='column left previous'>
<br>
[{{< fa solid arrow-left >}} Java SE: Create Maven Project](/javase/se-concepts-createproject.qmd)
<br>
</div>
<br>
<div class='column center'>
<br>
[{{< fa solid arrow-up >}} top](#top)
<br>
</div>
<br>
<div class='column right next'>
<br>
[Java SE: JUnit and TDD  {{< fa solid arrow-right >}}](/javase/se-concepts-tdd.qmd)
<br>
</div>
<br>
</div>
